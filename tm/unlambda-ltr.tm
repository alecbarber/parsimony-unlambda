_`^sSkKiI$[*!{
START:
  _ -> START; L; _
  ` -> START; L; `
  ^ -> START; L; ^
  s -> START; L; s
  S -> START; L; S
  k -> START; L; k
  K -> START; L; K
  i -> START; L; i
  I -> START; L; I
  $ -> remove_whitespace; R; $
  [ -> START; L; [
  * -> START; L; *
  ! -> START; L; !
  { -> START; L; {
remove_whitespace:
  _ -> SYNTHETIC_1_wind; L; *
  ` -> remove_whitespace; R; `
  ^ -> remove_whitespace; R; ^
  s -> remove_whitespace; R; s
  S -> remove_whitespace; R; S
  k -> remove_whitespace; R; k
  K -> remove_whitespace; R; K
  i -> remove_whitespace; R; i
  I -> remove_whitespace; R; I
  $ -> remove_whitespace; R; $
  [ -> remove_whitespace; R; [
  * -> SYNTHETIC_2_wind2; L; *
  ! -> remove_whitespace; R; !
  { -> remove_whitespace; R; {
SYNTHETIC_0_shuffle:
  _ -> SYNTHETIC_0_shuffle; R; _
  ` -> SYNTHETIC_0_shuffle_SHUFFLE_`; R; _
  ^ -> SYNTHETIC_0_shuffle_SHUFFLE_^; R; _
  s -> SYNTHETIC_0_shuffle_SHUFFLE_s; R; _
  S -> SYNTHETIC_0_shuffle_SHUFFLE_S; R; _
  k -> SYNTHETIC_0_shuffle_SHUFFLE_k; R; _
  K -> SYNTHETIC_0_shuffle_SHUFFLE_K; R; _
  i -> SYNTHETIC_0_shuffle_SHUFFLE_i; R; _
  I -> SYNTHETIC_0_shuffle_SHUFFLE_I; R; _
  $ -> SYNTHETIC_0_shuffle_SHUFFLE_$; R; _
  [ -> SYNTHETIC_0_shuffle_SHUFFLE_[; R; _
  * -> START; R; _
  ! -> SYNTHETIC_0_shuffle_SHUFFLE_!; R; _
  { -> SYNTHETIC_0_shuffle_SHUFFLE_{; R; _
SYNTHETIC_0_shuffle_SHUFFLE_`:
  _ -> SYNTHETIC_0_shuffle; R; `
  ` -> SYNTHETIC_0_shuffle_SHUFFLE_`; R; `
  ^ -> SYNTHETIC_0_shuffle_SHUFFLE_^; R; `
  s -> SYNTHETIC_0_shuffle_SHUFFLE_s; R; `
  S -> SYNTHETIC_0_shuffle_SHUFFLE_S; R; `
  k -> SYNTHETIC_0_shuffle_SHUFFLE_k; R; `
  K -> SYNTHETIC_0_shuffle_SHUFFLE_K; R; `
  i -> SYNTHETIC_0_shuffle_SHUFFLE_i; R; `
  I -> SYNTHETIC_0_shuffle_SHUFFLE_I; R; `
  $ -> SYNTHETIC_0_shuffle_SHUFFLE_$; R; `
  [ -> SYNTHETIC_0_shuffle_SHUFFLE_[; R; `
  * -> START; R; `
  ! -> SYNTHETIC_0_shuffle_SHUFFLE_!; R; `
  { -> SYNTHETIC_0_shuffle_SHUFFLE_{; R; `
SYNTHETIC_0_shuffle_SHUFFLE_^:
  _ -> SYNTHETIC_0_shuffle; R; ^
  ` -> SYNTHETIC_0_shuffle_SHUFFLE_`; R; ^
  ^ -> SYNTHETIC_0_shuffle_SHUFFLE_^; R; ^
  s -> SYNTHETIC_0_shuffle_SHUFFLE_s; R; ^
  S -> SYNTHETIC_0_shuffle_SHUFFLE_S; R; ^
  k -> SYNTHETIC_0_shuffle_SHUFFLE_k; R; ^
  K -> SYNTHETIC_0_shuffle_SHUFFLE_K; R; ^
  i -> SYNTHETIC_0_shuffle_SHUFFLE_i; R; ^
  I -> SYNTHETIC_0_shuffle_SHUFFLE_I; R; ^
  $ -> SYNTHETIC_0_shuffle_SHUFFLE_$; R; ^
  [ -> SYNTHETIC_0_shuffle_SHUFFLE_[; R; ^
  * -> START; R; ^
  ! -> SYNTHETIC_0_shuffle_SHUFFLE_!; R; ^
  { -> SYNTHETIC_0_shuffle_SHUFFLE_{; R; ^
SYNTHETIC_0_shuffle_SHUFFLE_s:
  _ -> SYNTHETIC_0_shuffle; R; s
  ` -> SYNTHETIC_0_shuffle_SHUFFLE_`; R; s
  ^ -> SYNTHETIC_0_shuffle_SHUFFLE_^; R; s
  s -> SYNTHETIC_0_shuffle_SHUFFLE_s; R; s
  S -> SYNTHETIC_0_shuffle_SHUFFLE_S; R; s
  k -> SYNTHETIC_0_shuffle_SHUFFLE_k; R; s
  K -> SYNTHETIC_0_shuffle_SHUFFLE_K; R; s
  i -> SYNTHETIC_0_shuffle_SHUFFLE_i; R; s
  I -> SYNTHETIC_0_shuffle_SHUFFLE_I; R; s
  $ -> SYNTHETIC_0_shuffle_SHUFFLE_$; R; s
  [ -> SYNTHETIC_0_shuffle_SHUFFLE_[; R; s
  * -> START; R; s
  ! -> SYNTHETIC_0_shuffle_SHUFFLE_!; R; s
  { -> SYNTHETIC_0_shuffle_SHUFFLE_{; R; s
SYNTHETIC_0_shuffle_SHUFFLE_S:
  _ -> SYNTHETIC_0_shuffle; R; S
  ` -> SYNTHETIC_0_shuffle_SHUFFLE_`; R; S
  ^ -> SYNTHETIC_0_shuffle_SHUFFLE_^; R; S
  s -> SYNTHETIC_0_shuffle_SHUFFLE_s; R; S
  S -> SYNTHETIC_0_shuffle_SHUFFLE_S; R; S
  k -> SYNTHETIC_0_shuffle_SHUFFLE_k; R; S
  K -> SYNTHETIC_0_shuffle_SHUFFLE_K; R; S
  i -> SYNTHETIC_0_shuffle_SHUFFLE_i; R; S
  I -> SYNTHETIC_0_shuffle_SHUFFLE_I; R; S
  $ -> SYNTHETIC_0_shuffle_SHUFFLE_$; R; S
  [ -> SYNTHETIC_0_shuffle_SHUFFLE_[; R; S
  * -> START; R; S
  ! -> SYNTHETIC_0_shuffle_SHUFFLE_!; R; S
  { -> SYNTHETIC_0_shuffle_SHUFFLE_{; R; S
SYNTHETIC_0_shuffle_SHUFFLE_k:
  _ -> SYNTHETIC_0_shuffle; R; k
  ` -> SYNTHETIC_0_shuffle_SHUFFLE_`; R; k
  ^ -> SYNTHETIC_0_shuffle_SHUFFLE_^; R; k
  s -> SYNTHETIC_0_shuffle_SHUFFLE_s; R; k
  S -> SYNTHETIC_0_shuffle_SHUFFLE_S; R; k
  k -> SYNTHETIC_0_shuffle_SHUFFLE_k; R; k
  K -> SYNTHETIC_0_shuffle_SHUFFLE_K; R; k
  i -> SYNTHETIC_0_shuffle_SHUFFLE_i; R; k
  I -> SYNTHETIC_0_shuffle_SHUFFLE_I; R; k
  $ -> SYNTHETIC_0_shuffle_SHUFFLE_$; R; k
  [ -> SYNTHETIC_0_shuffle_SHUFFLE_[; R; k
  * -> START; R; k
  ! -> SYNTHETIC_0_shuffle_SHUFFLE_!; R; k
  { -> SYNTHETIC_0_shuffle_SHUFFLE_{; R; k
SYNTHETIC_0_shuffle_SHUFFLE_K:
  _ -> SYNTHETIC_0_shuffle; R; K
  ` -> SYNTHETIC_0_shuffle_SHUFFLE_`; R; K
  ^ -> SYNTHETIC_0_shuffle_SHUFFLE_^; R; K
  s -> SYNTHETIC_0_shuffle_SHUFFLE_s; R; K
  S -> SYNTHETIC_0_shuffle_SHUFFLE_S; R; K
  k -> SYNTHETIC_0_shuffle_SHUFFLE_k; R; K
  K -> SYNTHETIC_0_shuffle_SHUFFLE_K; R; K
  i -> SYNTHETIC_0_shuffle_SHUFFLE_i; R; K
  I -> SYNTHETIC_0_shuffle_SHUFFLE_I; R; K
  $ -> SYNTHETIC_0_shuffle_SHUFFLE_$; R; K
  [ -> SYNTHETIC_0_shuffle_SHUFFLE_[; R; K
  * -> START; R; K
  ! -> SYNTHETIC_0_shuffle_SHUFFLE_!; R; K
  { -> SYNTHETIC_0_shuffle_SHUFFLE_{; R; K
SYNTHETIC_0_shuffle_SHUFFLE_i:
  _ -> SYNTHETIC_0_shuffle; R; i
  ` -> SYNTHETIC_0_shuffle_SHUFFLE_`; R; i
  ^ -> SYNTHETIC_0_shuffle_SHUFFLE_^; R; i
  s -> SYNTHETIC_0_shuffle_SHUFFLE_s; R; i
  S -> SYNTHETIC_0_shuffle_SHUFFLE_S; R; i
  k -> SYNTHETIC_0_shuffle_SHUFFLE_k; R; i
  K -> SYNTHETIC_0_shuffle_SHUFFLE_K; R; i
  i -> SYNTHETIC_0_shuffle_SHUFFLE_i; R; i
  I -> SYNTHETIC_0_shuffle_SHUFFLE_I; R; i
  $ -> SYNTHETIC_0_shuffle_SHUFFLE_$; R; i
  [ -> SYNTHETIC_0_shuffle_SHUFFLE_[; R; i
  * -> START; R; i
  ! -> SYNTHETIC_0_shuffle_SHUFFLE_!; R; i
  { -> SYNTHETIC_0_shuffle_SHUFFLE_{; R; i
SYNTHETIC_0_shuffle_SHUFFLE_I:
  _ -> SYNTHETIC_0_shuffle; R; I
  ` -> SYNTHETIC_0_shuffle_SHUFFLE_`; R; I
  ^ -> SYNTHETIC_0_shuffle_SHUFFLE_^; R; I
  s -> SYNTHETIC_0_shuffle_SHUFFLE_s; R; I
  S -> SYNTHETIC_0_shuffle_SHUFFLE_S; R; I
  k -> SYNTHETIC_0_shuffle_SHUFFLE_k; R; I
  K -> SYNTHETIC_0_shuffle_SHUFFLE_K; R; I
  i -> SYNTHETIC_0_shuffle_SHUFFLE_i; R; I
  I -> SYNTHETIC_0_shuffle_SHUFFLE_I; R; I
  $ -> SYNTHETIC_0_shuffle_SHUFFLE_$; R; I
  [ -> SYNTHETIC_0_shuffle_SHUFFLE_[; R; I
  * -> START; R; I
  ! -> SYNTHETIC_0_shuffle_SHUFFLE_!; R; I
  { -> SYNTHETIC_0_shuffle_SHUFFLE_{; R; I
SYNTHETIC_0_shuffle_SHUFFLE_$:
  _ -> SYNTHETIC_0_shuffle; R; $
  ` -> SYNTHETIC_0_shuffle_SHUFFLE_`; R; $
  ^ -> SYNTHETIC_0_shuffle_SHUFFLE_^; R; $
  s -> SYNTHETIC_0_shuffle_SHUFFLE_s; R; $
  S -> SYNTHETIC_0_shuffle_SHUFFLE_S; R; $
  k -> SYNTHETIC_0_shuffle_SHUFFLE_k; R; $
  K -> SYNTHETIC_0_shuffle_SHUFFLE_K; R; $
  i -> SYNTHETIC_0_shuffle_SHUFFLE_i; R; $
  I -> SYNTHETIC_0_shuffle_SHUFFLE_I; R; $
  $ -> SYNTHETIC_0_shuffle_SHUFFLE_$; R; $
  [ -> SYNTHETIC_0_shuffle_SHUFFLE_[; R; $
  * -> START; R; $
  ! -> SYNTHETIC_0_shuffle_SHUFFLE_!; R; $
  { -> SYNTHETIC_0_shuffle_SHUFFLE_{; R; $
SYNTHETIC_0_shuffle_SHUFFLE_[:
  _ -> SYNTHETIC_0_shuffle; R; [
  ` -> SYNTHETIC_0_shuffle_SHUFFLE_`; R; [
  ^ -> SYNTHETIC_0_shuffle_SHUFFLE_^; R; [
  s -> SYNTHETIC_0_shuffle_SHUFFLE_s; R; [
  S -> SYNTHETIC_0_shuffle_SHUFFLE_S; R; [
  k -> SYNTHETIC_0_shuffle_SHUFFLE_k; R; [
  K -> SYNTHETIC_0_shuffle_SHUFFLE_K; R; [
  i -> SYNTHETIC_0_shuffle_SHUFFLE_i; R; [
  I -> SYNTHETIC_0_shuffle_SHUFFLE_I; R; [
  $ -> SYNTHETIC_0_shuffle_SHUFFLE_$; R; [
  [ -> SYNTHETIC_0_shuffle_SHUFFLE_[; R; [
  * -> START; R; [
  ! -> SYNTHETIC_0_shuffle_SHUFFLE_!; R; [
  { -> SYNTHETIC_0_shuffle_SHUFFLE_{; R; [
SYNTHETIC_0_shuffle_SHUFFLE_*:
  _ -> SYNTHETIC_0_shuffle; R; *
  ` -> SYNTHETIC_0_shuffle_SHUFFLE_`; R; *
  ^ -> SYNTHETIC_0_shuffle_SHUFFLE_^; R; *
  s -> SYNTHETIC_0_shuffle_SHUFFLE_s; R; *
  S -> SYNTHETIC_0_shuffle_SHUFFLE_S; R; *
  k -> SYNTHETIC_0_shuffle_SHUFFLE_k; R; *
  K -> SYNTHETIC_0_shuffle_SHUFFLE_K; R; *
  i -> SYNTHETIC_0_shuffle_SHUFFLE_i; R; *
  I -> SYNTHETIC_0_shuffle_SHUFFLE_I; R; *
  $ -> SYNTHETIC_0_shuffle_SHUFFLE_$; R; *
  [ -> SYNTHETIC_0_shuffle_SHUFFLE_[; R; *
  * -> START; R; *
  ! -> SYNTHETIC_0_shuffle_SHUFFLE_!; R; *
  { -> SYNTHETIC_0_shuffle_SHUFFLE_{; R; *
SYNTHETIC_0_shuffle_SHUFFLE_!:
  _ -> SYNTHETIC_0_shuffle; R; !
  ` -> SYNTHETIC_0_shuffle_SHUFFLE_`; R; !
  ^ -> SYNTHETIC_0_shuffle_SHUFFLE_^; R; !
  s -> SYNTHETIC_0_shuffle_SHUFFLE_s; R; !
  S -> SYNTHETIC_0_shuffle_SHUFFLE_S; R; !
  k -> SYNTHETIC_0_shuffle_SHUFFLE_k; R; !
  K -> SYNTHETIC_0_shuffle_SHUFFLE_K; R; !
  i -> SYNTHETIC_0_shuffle_SHUFFLE_i; R; !
  I -> SYNTHETIC_0_shuffle_SHUFFLE_I; R; !
  $ -> SYNTHETIC_0_shuffle_SHUFFLE_$; R; !
  [ -> SYNTHETIC_0_shuffle_SHUFFLE_[; R; !
  * -> START; R; !
  ! -> SYNTHETIC_0_shuffle_SHUFFLE_!; R; !
  { -> SYNTHETIC_0_shuffle_SHUFFLE_{; R; !
SYNTHETIC_0_shuffle_SHUFFLE_{:
  _ -> SYNTHETIC_0_shuffle; R; {
  ` -> SYNTHETIC_0_shuffle_SHUFFLE_`; R; {
  ^ -> SYNTHETIC_0_shuffle_SHUFFLE_^; R; {
  s -> SYNTHETIC_0_shuffle_SHUFFLE_s; R; {
  S -> SYNTHETIC_0_shuffle_SHUFFLE_S; R; {
  k -> SYNTHETIC_0_shuffle_SHUFFLE_k; R; {
  K -> SYNTHETIC_0_shuffle_SHUFFLE_K; R; {
  i -> SYNTHETIC_0_shuffle_SHUFFLE_i; R; {
  I -> SYNTHETIC_0_shuffle_SHUFFLE_I; R; {
  $ -> SYNTHETIC_0_shuffle_SHUFFLE_$; R; {
  [ -> SYNTHETIC_0_shuffle_SHUFFLE_[; R; {
  * -> START; R; {
  ! -> SYNTHETIC_0_shuffle_SHUFFLE_!; R; {
  { -> SYNTHETIC_0_shuffle_SHUFFLE_{; R; {
SYNTHETIC_1_wind:
  _ -> SYNTHETIC_1_wind; L; _
  ` -> SYNTHETIC_1_wind; L; `
  ^ -> SYNTHETIC_1_wind; L; ^
  s -> SYNTHETIC_1_wind; L; s
  S -> SYNTHETIC_1_wind; L; S
  k -> SYNTHETIC_1_wind; L; k
  K -> SYNTHETIC_1_wind; L; K
  i -> SYNTHETIC_1_wind; L; i
  I -> SYNTHETIC_1_wind; L; I
  $ -> SYNTHETIC_0_shuffle; L; $
  [ -> SYNTHETIC_1_wind; L; [
  * -> SYNTHETIC_1_wind; L; *
  ! -> SYNTHETIC_1_wind; L; !
  { -> SYNTHETIC_1_wind; L; {
SYNTHETIC_2_wind2:
  _ -> SYNTHETIC_2_wind2; L; _
  ` -> SYNTHETIC_2_wind2; L; `
  ^ -> SYNTHETIC_2_wind2; L; ^
  s -> SYNTHETIC_2_wind2; L; s
  S -> SYNTHETIC_2_wind2; L; S
  k -> SYNTHETIC_2_wind2; L; k
  K -> SYNTHETIC_2_wind2; L; K
  i -> SYNTHETIC_2_wind2; L; i
  I -> SYNTHETIC_2_wind2; L; I
  $ -> next_action; R; $
  [ -> SYNTHETIC_2_wind2; L; [
  * -> SYNTHETIC_2_wind2; L; *
  ! -> SYNTHETIC_2_wind2; L; !
  { -> SYNTHETIC_2_wind2; L; {
next_action:
  _ -> next_action; R; _
  ` -> next_action_MATCH_`; R; `
  ^ -> next_action; R; ^
  s -> next_action_MATCH_s; R; s
  S -> next_action; R; S
  k -> next_action_MATCH_k; R; k
  K -> next_action; R; K
  i -> next_action; R; i
  I -> next_action; R; I
  $ -> next_action; R; $
  [ -> next_action; R; [
  * -> ACCEPT; R; *
  ! -> next_action; R; !
  { -> next_action; R; {
next_action_MATCH_`:
  _ -> next_action; R; _
  ` -> next_action_MATCH_``; R; `
  ^ -> next_action; R; ^
  s -> next_action_MATCH_s; R; s
  S -> next_action; R; S
  k -> next_action_MATCH_k; R; k
  K -> next_action; R; K
  i -> evaluate_i; L; _
  I -> next_action; R; I
  $ -> next_action; R; $
  [ -> next_action; R; [
  * -> ACCEPT; R; *
  ! -> next_action; R; !
  { -> next_action; R; {
next_action_MATCH_k:
  _ -> next_action; R; _
  ` -> next_action_MATCH_`; R; `
  ^ -> next_action; R; ^
  s -> next_action_MATCH_s; R; s
  S -> next_action; R; S
  k -> next_action_MATCH_k; R; k
  K -> next_action; R; K
  i -> next_action; R; i
  I -> next_action; R; I
  $ -> next_action; R; $
  [ -> evaluate_k_findY; R; [
  * -> ACCEPT; R; *
  ! -> next_action; R; !
  { -> next_action; R; {
next_action_MATCH_``:
  _ -> next_action; R; _
  ` -> next_action_MATCH_```; R; `
  ^ -> next_action; R; ^
  s -> next_action_MATCH_s; R; s
  S -> next_action; R; S
  k -> evaluate_k_matchX; L; k
  K -> next_action; R; K
  i -> evaluate_i; L; _
  I -> next_action; R; I
  $ -> next_action; R; $
  [ -> next_action; R; [
  * -> ACCEPT; R; *
  ! -> next_action; R; !
  { -> next_action; R; {
next_action_MATCH_s:
  _ -> next_action; R; _
  ` -> next_action_MATCH_`; R; `
  ^ -> next_action; R; ^
  s -> next_action_MATCH_s; R; s
  S -> next_action; R; S
  k -> next_action_MATCH_k; R; k
  K -> next_action; R; K
  i -> next_action; R; i
  I -> next_action; R; I
  $ -> next_action; R; $
  [ -> SYNTHETIC_3_step; R; [
  * -> ACCEPT; R; *
  ! -> next_action; R; !
  { -> next_action; R; {
next_action_MATCH_```:
  _ -> next_action; R; _
  ` -> next_action_MATCH_```; R; `
  ^ -> next_action; R; ^
  s -> evaluate_s_matchX; L; s
  S -> next_action; R; S
  k -> evaluate_k_matchX; L; k
  K -> next_action; R; K
  i -> evaluate_i; L; _
  I -> next_action; R; I
  $ -> next_action; R; $
  [ -> next_action; R; [
  * -> ACCEPT; R; *
  ! -> next_action; R; !
  { -> next_action; R; {
SYNTHETIC_3_step:
  _ -> evaluate_s_X_matched; L; _
  ` -> evaluate_s_X_matched; L; `
  ^ -> evaluate_s_X_matched; L; ^
  s -> evaluate_s_X_matched; L; s
  S -> evaluate_s_X_matched; L; S
  k -> evaluate_s_X_matched; L; k
  K -> evaluate_s_X_matched; L; K
  i -> evaluate_s_X_matched; L; i
  I -> evaluate_s_X_matched; L; I
  $ -> evaluate_s_X_matched; L; $
  [ -> evaluate_s_X_matched; L; [
  * -> evaluate_s_X_matched; L; *
  ! -> evaluate_s_X_matched; L; !
  { -> evaluate_s_X_matched; L; {
evaluate_i:
  _ -> START; L; _
  ` -> START; L; _
  ^ -> START; L; _
  s -> START; L; _
  S -> START; L; _
  k -> START; L; _
  K -> START; L; _
  i -> START; L; _
  I -> START; L; _
  $ -> START; L; _
  [ -> START; L; _
  * -> START; L; _
  ! -> START; L; _
  { -> START; L; _
evaluate_k_matchX:
  _ -> ERROR; L; _
  ` -> evaluate_k_matchX_MATCH_`; L; `
  ^ -> ERROR; L; ^
  s -> ERROR; L; s
  S -> ERROR; L; S
  k -> ERROR; L; k
  K -> ERROR; L; K
  i -> ERROR; L; i
  I -> ERROR; L; I
  $ -> ERROR; L; $
  [ -> ERROR; L; [
  * -> ERROR; L; *
  ! -> ERROR; L; !
  { -> ERROR; L; {
evaluate_k_matchX_MATCH_`:
  _ -> ERROR; L; _
  ` -> evaluate_k_matchX_write_k[; R; ^
  ^ -> ERROR; L; ^
  s -> ERROR; L; s
  S -> ERROR; L; S
  k -> ERROR; L; k
  K -> ERROR; L; K
  i -> ERROR; L; i
  I -> ERROR; L; I
  $ -> ERROR; L; $
  [ -> ERROR; L; [
  * -> ERROR; L; *
  ! -> ERROR; L; !
  { -> ERROR; L; {
evaluate_k_matchX_write_k[:
  _ -> ERROR; R; _
  ` -> evaluate_k_matchX_write_k[; R; k
  ^ -> ERROR; R; ^
  s -> ERROR; R; s
  S -> ERROR; R; S
  k -> match_expression; R; [
  K -> ERROR; R; K
  i -> ERROR; R; i
  I -> ERROR; R; I
  $ -> ERROR; R; $
  [ -> ERROR; R; [
  * -> ERROR; R; *
  ! -> ERROR; R; !
  { -> ERROR; R; {
evaluate_k_findY:
  _ -> evaluate_k_findY; R; _
  ` -> evaluate_k_findY; R; `
  ^ -> evaluate_k_findY; R; ^
  s -> evaluate_k_findY; R; s
  S -> evaluate_k_findY; R; S
  k -> evaluate_k_findY; R; k
  K -> evaluate_k_findY; R; K
  i -> evaluate_k_findY; R; i
  I -> evaluate_k_findY; R; I
  $ -> evaluate_k_findY; R; $
  [ -> evaluate_k_findY; R; [
  * -> match_expression; R; {
  ! -> evaluate_k_findY; R; !
  { -> evaluate_k_clean_up; R; _
evaluate_k_clean_up:
  _ -> evaluate_k_clean_up; R; _
  ` -> evaluate_k_clean_up; R; _
  ^ -> evaluate_k_clean_up; R; _
  s -> evaluate_k_clean_up; R; _
  S -> evaluate_k_clean_up; R; _
  k -> evaluate_k_clean_up; R; _
  K -> evaluate_k_clean_up; R; _
  i -> evaluate_k_clean_up; R; _
  I -> evaluate_k_clean_up; R; _
  $ -> evaluate_k_clean_up; R; _
  [ -> evaluate_k_clean_up; R; _
  * -> evaluate_k_return_to_head; L; _
  ! -> evaluate_k_clean_up; R; _
  { -> evaluate_k_clean_up; R; _
evaluate_k_return_to_head:
  _ -> evaluate_k_return_to_head; L; _
  ` -> evaluate_k_return_to_head; L; `
  ^ -> evaluate_k_return_to_head; L; ^
  s -> evaluate_k_return_to_head; L; s
  S -> evaluate_k_return_to_head; L; S
  k -> evaluate_k_return_to_head; L; k
  K -> evaluate_k_return_to_head; L; K
  i -> evaluate_k_return_to_head; L; i
  I -> evaluate_k_return_to_head; L; I
  $ -> evaluate_k_return_to_head; L; $
  [ -> evaluate_k_clean_up_head; L; _
  * -> evaluate_k_return_to_head; L; *
  ! -> evaluate_k_return_to_head; L; !
  { -> evaluate_k_return_to_head; L; {
evaluate_k_clean_up_head:
  _ -> evaluate_k_clean_up_head; L; _
  ` -> evaluate_k_clean_up_head; L; `
  ^ -> normalise_matched_expression; L; _
  s -> evaluate_k_clean_up_head; L; s
  S -> evaluate_k_clean_up_head; L; S
  k -> evaluate_k_clean_up_head; L; _
  K -> evaluate_k_clean_up_head; L; K
  i -> evaluate_k_clean_up_head; L; i
  I -> evaluate_k_clean_up_head; L; I
  $ -> ERROR; L; $
  [ -> evaluate_k_clean_up_head; L; [
  * -> evaluate_k_clean_up_head; L; *
  ! -> evaluate_k_clean_up_head; L; !
  { -> evaluate_k_clean_up_head; L; {
evaluate_s_matchX:
  _ -> ERROR; L; _
  ` -> evaluate_s_matchX_MATCH_`; L; `
  ^ -> ERROR; L; ^
  s -> ERROR; L; s
  S -> ERROR; L; S
  k -> ERROR; L; k
  K -> ERROR; L; K
  i -> ERROR; L; i
  I -> ERROR; L; I
  $ -> ERROR; L; $
  [ -> ERROR; L; [
  * -> ERROR; L; *
  ! -> ERROR; L; !
  { -> ERROR; L; {
evaluate_s_matchX_MATCH_`:
  _ -> ERROR; L; _
  ` -> evaluate_s_matchX_write_s[; R; ^
  ^ -> ERROR; L; ^
  s -> ERROR; L; s
  S -> ERROR; L; S
  k -> ERROR; L; k
  K -> ERROR; L; K
  i -> ERROR; L; i
  I -> ERROR; L; I
  $ -> ERROR; L; $
  [ -> ERROR; L; [
  * -> ERROR; L; *
  ! -> ERROR; L; !
  { -> ERROR; L; {
evaluate_s_matchX_write_s[:
  _ -> ERROR; R; _
  ` -> evaluate_s_matchX_write_s[; R; s
  ^ -> ERROR; R; ^
  s -> match_expression; R; [
  S -> ERROR; R; S
  k -> ERROR; R; k
  K -> ERROR; R; K
  i -> ERROR; R; i
  I -> ERROR; R; I
  $ -> ERROR; R; $
  [ -> ERROR; R; [
  * -> ERROR; R; *
  ! -> ERROR; R; !
  { -> ERROR; R; {
evaluate_s_X_matched:
  _ -> evaluate_s_X_matched; R; _
  ` -> evaluate_s_X_matched; R; `
  ^ -> evaluate_s_X_matched; R; ^
  s -> evaluate_s_X_matched; R; s
  S -> evaluate_s_X_matched; R; S
  k -> evaluate_s_X_matched; R; k
  K -> evaluate_s_X_matched; R; K
  i -> evaluate_s_X_matched; R; i
  I -> evaluate_s_X_matched; R; I
  $ -> evaluate_s_X_matched; R; $
  [ -> evaluate_s_X_matched; R; [
  * -> match_expression; R; {
  ! -> evaluate_s_Y_matched; R; !
  { -> evaluate_s_Y_matched; R; !
evaluate_s_Y_matched:
  _ -> evaluate_s_Y_matched; R; _
  ` -> evaluate_s_Y_matched; R; `
  ^ -> evaluate_s_Y_matched; R; ^
  s -> evaluate_s_Y_matched; R; s
  S -> evaluate_s_Y_matched; R; S
  k -> evaluate_s_Y_matched; R; k
  K -> evaluate_s_Y_matched; R; K
  i -> evaluate_s_Y_matched; R; i
  I -> evaluate_s_Y_matched; R; I
  $ -> evaluate_s_Y_matched; R; $
  [ -> evaluate_s_Y_matched; R; [
  * -> match_expression; R; {
  ! -> evaluate_s_Y_matched; R; !
  { -> SYNTHETIC_5_copy; R; {
SYNTHETIC_4_step:
  _ -> evaluate_s_clean_up; R; _
  ` -> evaluate_s_clean_up; R; `
  ^ -> evaluate_s_clean_up; R; ^
  s -> evaluate_s_clean_up; R; s
  S -> evaluate_s_clean_up; R; S
  k -> evaluate_s_clean_up; R; k
  K -> evaluate_s_clean_up; R; K
  i -> evaluate_s_clean_up; R; i
  I -> evaluate_s_clean_up; R; I
  $ -> evaluate_s_clean_up; R; $
  [ -> evaluate_s_clean_up; R; [
  * -> evaluate_s_clean_up; R; *
  ! -> evaluate_s_clean_up; R; !
  { -> evaluate_s_clean_up; R; {
SYNTHETIC_5_copy:
  _ -> SYNTHETIC_5_copy_COPY__; L; {
  ` -> SYNTHETIC_5_copy_COPY_`; L; {
  ^ -> SYNTHETIC_5_copy_COPY_^; L; {
  s -> SYNTHETIC_5_copy_COPY_s; L; {
  S -> SYNTHETIC_5_copy_COPY_S; L; {
  k -> SYNTHETIC_5_copy_COPY_k; L; {
  K -> SYNTHETIC_5_copy_COPY_K; L; {
  i -> SYNTHETIC_5_copy_COPY_i; L; {
  I -> SYNTHETIC_5_copy_COPY_I; L; {
  $ -> SYNTHETIC_5_copy_COPY_$; L; {
  [ -> SYNTHETIC_5_copy_COPY_[; L; {
  * -> SYNTHETIC_4_step; L; *
  ! -> SYNTHETIC_5_copy_COPY_!; L; {
  { -> SYNTHETIC_5_copy_COPY_{; L; {
SYNTHETIC_5_copy_INTERNAL_wind2{:
  _ -> SYNTHETIC_5_copy_INTERNAL_wind2{; L; _
  ` -> SYNTHETIC_5_copy_INTERNAL_wind2{; L; `
  ^ -> SYNTHETIC_5_copy_INTERNAL_wind2{; L; ^
  s -> SYNTHETIC_5_copy_INTERNAL_wind2{; L; s
  S -> SYNTHETIC_5_copy_INTERNAL_wind2{; L; S
  k -> SYNTHETIC_5_copy_INTERNAL_wind2{; L; k
  K -> SYNTHETIC_5_copy_INTERNAL_wind2{; L; K
  i -> SYNTHETIC_5_copy_INTERNAL_wind2{; L; i
  I -> SYNTHETIC_5_copy_INTERNAL_wind2{; L; I
  $ -> SYNTHETIC_5_copy_INTERNAL_wind2{; L; $
  [ -> SYNTHETIC_5_copy_INTERNAL_wind2{; L; [
  * -> SYNTHETIC_5_copy_INTERNAL_wind2{; L; *
  ! -> SYNTHETIC_5_copy_INTERNAL_wind2{; L; !
  { -> SYNTHETIC_5_copy; R; {
SYNTHETIC_5_copy_INTERNAL_shuffle!_SHUFFLE__:
  _ -> SYNTHETIC_5_copy_INTERNAL_wind2{; R; _
  ` -> SYNTHETIC_5_copy_INTERNAL_shuffle!_SHUFFLE_`; R; _
  ^ -> SYNTHETIC_5_copy_INTERNAL_shuffle!_SHUFFLE_^; R; _
  s -> SYNTHETIC_5_copy_INTERNAL_shuffle!_SHUFFLE_s; R; _
  S -> SYNTHETIC_5_copy_INTERNAL_shuffle!_SHUFFLE_S; R; _
  k -> SYNTHETIC_5_copy_INTERNAL_shuffle!_SHUFFLE_k; R; _
  K -> SYNTHETIC_5_copy_INTERNAL_shuffle!_SHUFFLE_K; R; _
  i -> SYNTHETIC_5_copy_INTERNAL_shuffle!_SHUFFLE_i; R; _
  I -> SYNTHETIC_5_copy_INTERNAL_shuffle!_SHUFFLE_I; R; _
  $ -> SYNTHETIC_5_copy_INTERNAL_shuffle!_SHUFFLE_$; R; _
  [ -> SYNTHETIC_5_copy_INTERNAL_shuffle!_SHUFFLE_[; R; _
  * -> SYNTHETIC_5_copy_INTERNAL_shuffle!_SHUFFLE_*; R; _
  ! -> SYNTHETIC_5_copy_INTERNAL_shuffle!; R; _
  { -> SYNTHETIC_5_copy_INTERNAL_shuffle!_SHUFFLE_{; R; _
SYNTHETIC_5_copy_INTERNAL_shuffle!_SHUFFLE_`:
  _ -> SYNTHETIC_5_copy_INTERNAL_wind2{; R; `
  ` -> SYNTHETIC_5_copy_INTERNAL_shuffle!_SHUFFLE_`; R; `
  ^ -> SYNTHETIC_5_copy_INTERNAL_shuffle!_SHUFFLE_^; R; `
  s -> SYNTHETIC_5_copy_INTERNAL_shuffle!_SHUFFLE_s; R; `
  S -> SYNTHETIC_5_copy_INTERNAL_shuffle!_SHUFFLE_S; R; `
  k -> SYNTHETIC_5_copy_INTERNAL_shuffle!_SHUFFLE_k; R; `
  K -> SYNTHETIC_5_copy_INTERNAL_shuffle!_SHUFFLE_K; R; `
  i -> SYNTHETIC_5_copy_INTERNAL_shuffle!_SHUFFLE_i; R; `
  I -> SYNTHETIC_5_copy_INTERNAL_shuffle!_SHUFFLE_I; R; `
  $ -> SYNTHETIC_5_copy_INTERNAL_shuffle!_SHUFFLE_$; R; `
  [ -> SYNTHETIC_5_copy_INTERNAL_shuffle!_SHUFFLE_[; R; `
  * -> SYNTHETIC_5_copy_INTERNAL_shuffle!_SHUFFLE_*; R; `
  ! -> SYNTHETIC_5_copy_INTERNAL_shuffle!; R; `
  { -> SYNTHETIC_5_copy_INTERNAL_shuffle!_SHUFFLE_{; R; `
SYNTHETIC_5_copy_INTERNAL_shuffle!_SHUFFLE_^:
  _ -> SYNTHETIC_5_copy_INTERNAL_wind2{; R; ^
  ` -> SYNTHETIC_5_copy_INTERNAL_shuffle!_SHUFFLE_`; R; ^
  ^ -> SYNTHETIC_5_copy_INTERNAL_shuffle!_SHUFFLE_^; R; ^
  s -> SYNTHETIC_5_copy_INTERNAL_shuffle!_SHUFFLE_s; R; ^
  S -> SYNTHETIC_5_copy_INTERNAL_shuffle!_SHUFFLE_S; R; ^
  k -> SYNTHETIC_5_copy_INTERNAL_shuffle!_SHUFFLE_k; R; ^
  K -> SYNTHETIC_5_copy_INTERNAL_shuffle!_SHUFFLE_K; R; ^
  i -> SYNTHETIC_5_copy_INTERNAL_shuffle!_SHUFFLE_i; R; ^
  I -> SYNTHETIC_5_copy_INTERNAL_shuffle!_SHUFFLE_I; R; ^
  $ -> SYNTHETIC_5_copy_INTERNAL_shuffle!_SHUFFLE_$; R; ^
  [ -> SYNTHETIC_5_copy_INTERNAL_shuffle!_SHUFFLE_[; R; ^
  * -> SYNTHETIC_5_copy_INTERNAL_shuffle!_SHUFFLE_*; R; ^
  ! -> SYNTHETIC_5_copy_INTERNAL_shuffle!; R; ^
  { -> SYNTHETIC_5_copy_INTERNAL_shuffle!_SHUFFLE_{; R; ^
SYNTHETIC_5_copy_INTERNAL_shuffle!_SHUFFLE_s:
  _ -> SYNTHETIC_5_copy_INTERNAL_wind2{; R; s
  ` -> SYNTHETIC_5_copy_INTERNAL_shuffle!_SHUFFLE_`; R; s
  ^ -> SYNTHETIC_5_copy_INTERNAL_shuffle!_SHUFFLE_^; R; s
  s -> SYNTHETIC_5_copy_INTERNAL_shuffle!_SHUFFLE_s; R; s
  S -> SYNTHETIC_5_copy_INTERNAL_shuffle!_SHUFFLE_S; R; s
  k -> SYNTHETIC_5_copy_INTERNAL_shuffle!_SHUFFLE_k; R; s
  K -> SYNTHETIC_5_copy_INTERNAL_shuffle!_SHUFFLE_K; R; s
  i -> SYNTHETIC_5_copy_INTERNAL_shuffle!_SHUFFLE_i; R; s
  I -> SYNTHETIC_5_copy_INTERNAL_shuffle!_SHUFFLE_I; R; s
  $ -> SYNTHETIC_5_copy_INTERNAL_shuffle!_SHUFFLE_$; R; s
  [ -> SYNTHETIC_5_copy_INTERNAL_shuffle!_SHUFFLE_[; R; s
  * -> SYNTHETIC_5_copy_INTERNAL_shuffle!_SHUFFLE_*; R; s
  ! -> SYNTHETIC_5_copy_INTERNAL_shuffle!; R; s
  { -> SYNTHETIC_5_copy_INTERNAL_shuffle!_SHUFFLE_{; R; s
SYNTHETIC_5_copy_INTERNAL_shuffle!_SHUFFLE_S:
  _ -> SYNTHETIC_5_copy_INTERNAL_wind2{; R; S
  ` -> SYNTHETIC_5_copy_INTERNAL_shuffle!_SHUFFLE_`; R; S
  ^ -> SYNTHETIC_5_copy_INTERNAL_shuffle!_SHUFFLE_^; R; S
  s -> SYNTHETIC_5_copy_INTERNAL_shuffle!_SHUFFLE_s; R; S
  S -> SYNTHETIC_5_copy_INTERNAL_shuffle!_SHUFFLE_S; R; S
  k -> SYNTHETIC_5_copy_INTERNAL_shuffle!_SHUFFLE_k; R; S
  K -> SYNTHETIC_5_copy_INTERNAL_shuffle!_SHUFFLE_K; R; S
  i -> SYNTHETIC_5_copy_INTERNAL_shuffle!_SHUFFLE_i; R; S
  I -> SYNTHETIC_5_copy_INTERNAL_shuffle!_SHUFFLE_I; R; S
  $ -> SYNTHETIC_5_copy_INTERNAL_shuffle!_SHUFFLE_$; R; S
  [ -> SYNTHETIC_5_copy_INTERNAL_shuffle!_SHUFFLE_[; R; S
  * -> SYNTHETIC_5_copy_INTERNAL_shuffle!_SHUFFLE_*; R; S
  ! -> SYNTHETIC_5_copy_INTERNAL_shuffle!; R; S
  { -> SYNTHETIC_5_copy_INTERNAL_shuffle!_SHUFFLE_{; R; S
SYNTHETIC_5_copy_INTERNAL_shuffle!_SHUFFLE_k:
  _ -> SYNTHETIC_5_copy_INTERNAL_wind2{; R; k
  ` -> SYNTHETIC_5_copy_INTERNAL_shuffle!_SHUFFLE_`; R; k
  ^ -> SYNTHETIC_5_copy_INTERNAL_shuffle!_SHUFFLE_^; R; k
  s -> SYNTHETIC_5_copy_INTERNAL_shuffle!_SHUFFLE_s; R; k
  S -> SYNTHETIC_5_copy_INTERNAL_shuffle!_SHUFFLE_S; R; k
  k -> SYNTHETIC_5_copy_INTERNAL_shuffle!_SHUFFLE_k; R; k
  K -> SYNTHETIC_5_copy_INTERNAL_shuffle!_SHUFFLE_K; R; k
  i -> SYNTHETIC_5_copy_INTERNAL_shuffle!_SHUFFLE_i; R; k
  I -> SYNTHETIC_5_copy_INTERNAL_shuffle!_SHUFFLE_I; R; k
  $ -> SYNTHETIC_5_copy_INTERNAL_shuffle!_SHUFFLE_$; R; k
  [ -> SYNTHETIC_5_copy_INTERNAL_shuffle!_SHUFFLE_[; R; k
  * -> SYNTHETIC_5_copy_INTERNAL_shuffle!_SHUFFLE_*; R; k
  ! -> SYNTHETIC_5_copy_INTERNAL_shuffle!; R; k
  { -> SYNTHETIC_5_copy_INTERNAL_shuffle!_SHUFFLE_{; R; k
SYNTHETIC_5_copy_INTERNAL_shuffle!_SHUFFLE_K:
  _ -> SYNTHETIC_5_copy_INTERNAL_wind2{; R; K
  ` -> SYNTHETIC_5_copy_INTERNAL_shuffle!_SHUFFLE_`; R; K
  ^ -> SYNTHETIC_5_copy_INTERNAL_shuffle!_SHUFFLE_^; R; K
  s -> SYNTHETIC_5_copy_INTERNAL_shuffle!_SHUFFLE_s; R; K
  S -> SYNTHETIC_5_copy_INTERNAL_shuffle!_SHUFFLE_S; R; K
  k -> SYNTHETIC_5_copy_INTERNAL_shuffle!_SHUFFLE_k; R; K
  K -> SYNTHETIC_5_copy_INTERNAL_shuffle!_SHUFFLE_K; R; K
  i -> SYNTHETIC_5_copy_INTERNAL_shuffle!_SHUFFLE_i; R; K
  I -> SYNTHETIC_5_copy_INTERNAL_shuffle!_SHUFFLE_I; R; K
  $ -> SYNTHETIC_5_copy_INTERNAL_shuffle!_SHUFFLE_$; R; K
  [ -> SYNTHETIC_5_copy_INTERNAL_shuffle!_SHUFFLE_[; R; K
  * -> SYNTHETIC_5_copy_INTERNAL_shuffle!_SHUFFLE_*; R; K
  ! -> SYNTHETIC_5_copy_INTERNAL_shuffle!; R; K
  { -> SYNTHETIC_5_copy_INTERNAL_shuffle!_SHUFFLE_{; R; K
SYNTHETIC_5_copy_INTERNAL_shuffle!_SHUFFLE_i:
  _ -> SYNTHETIC_5_copy_INTERNAL_wind2{; R; i
  ` -> SYNTHETIC_5_copy_INTERNAL_shuffle!_SHUFFLE_`; R; i
  ^ -> SYNTHETIC_5_copy_INTERNAL_shuffle!_SHUFFLE_^; R; i
  s -> SYNTHETIC_5_copy_INTERNAL_shuffle!_SHUFFLE_s; R; i
  S -> SYNTHETIC_5_copy_INTERNAL_shuffle!_SHUFFLE_S; R; i
  k -> SYNTHETIC_5_copy_INTERNAL_shuffle!_SHUFFLE_k; R; i
  K -> SYNTHETIC_5_copy_INTERNAL_shuffle!_SHUFFLE_K; R; i
  i -> SYNTHETIC_5_copy_INTERNAL_shuffle!_SHUFFLE_i; R; i
  I -> SYNTHETIC_5_copy_INTERNAL_shuffle!_SHUFFLE_I; R; i
  $ -> SYNTHETIC_5_copy_INTERNAL_shuffle!_SHUFFLE_$; R; i
  [ -> SYNTHETIC_5_copy_INTERNAL_shuffle!_SHUFFLE_[; R; i
  * -> SYNTHETIC_5_copy_INTERNAL_shuffle!_SHUFFLE_*; R; i
  ! -> SYNTHETIC_5_copy_INTERNAL_shuffle!; R; i
  { -> SYNTHETIC_5_copy_INTERNAL_shuffle!_SHUFFLE_{; R; i
SYNTHETIC_5_copy_INTERNAL_shuffle!_SHUFFLE_I:
  _ -> SYNTHETIC_5_copy_INTERNAL_wind2{; R; I
  ` -> SYNTHETIC_5_copy_INTERNAL_shuffle!_SHUFFLE_`; R; I
  ^ -> SYNTHETIC_5_copy_INTERNAL_shuffle!_SHUFFLE_^; R; I
  s -> SYNTHETIC_5_copy_INTERNAL_shuffle!_SHUFFLE_s; R; I
  S -> SYNTHETIC_5_copy_INTERNAL_shuffle!_SHUFFLE_S; R; I
  k -> SYNTHETIC_5_copy_INTERNAL_shuffle!_SHUFFLE_k; R; I
  K -> SYNTHETIC_5_copy_INTERNAL_shuffle!_SHUFFLE_K; R; I
  i -> SYNTHETIC_5_copy_INTERNAL_shuffle!_SHUFFLE_i; R; I
  I -> SYNTHETIC_5_copy_INTERNAL_shuffle!_SHUFFLE_I; R; I
  $ -> SYNTHETIC_5_copy_INTERNAL_shuffle!_SHUFFLE_$; R; I
  [ -> SYNTHETIC_5_copy_INTERNAL_shuffle!_SHUFFLE_[; R; I
  * -> SYNTHETIC_5_copy_INTERNAL_shuffle!_SHUFFLE_*; R; I
  ! -> SYNTHETIC_5_copy_INTERNAL_shuffle!; R; I
  { -> SYNTHETIC_5_copy_INTERNAL_shuffle!_SHUFFLE_{; R; I
SYNTHETIC_5_copy_INTERNAL_shuffle!_SHUFFLE_$:
  _ -> SYNTHETIC_5_copy_INTERNAL_wind2{; R; $
  ` -> SYNTHETIC_5_copy_INTERNAL_shuffle!_SHUFFLE_`; R; $
  ^ -> SYNTHETIC_5_copy_INTERNAL_shuffle!_SHUFFLE_^; R; $
  s -> SYNTHETIC_5_copy_INTERNAL_shuffle!_SHUFFLE_s; R; $
  S -> SYNTHETIC_5_copy_INTERNAL_shuffle!_SHUFFLE_S; R; $
  k -> SYNTHETIC_5_copy_INTERNAL_shuffle!_SHUFFLE_k; R; $
  K -> SYNTHETIC_5_copy_INTERNAL_shuffle!_SHUFFLE_K; R; $
  i -> SYNTHETIC_5_copy_INTERNAL_shuffle!_SHUFFLE_i; R; $
  I -> SYNTHETIC_5_copy_INTERNAL_shuffle!_SHUFFLE_I; R; $
  $ -> SYNTHETIC_5_copy_INTERNAL_shuffle!_SHUFFLE_$; R; $
  [ -> SYNTHETIC_5_copy_INTERNAL_shuffle!_SHUFFLE_[; R; $
  * -> SYNTHETIC_5_copy_INTERNAL_shuffle!_SHUFFLE_*; R; $
  ! -> SYNTHETIC_5_copy_INTERNAL_shuffle!; R; $
  { -> SYNTHETIC_5_copy_INTERNAL_shuffle!_SHUFFLE_{; R; $
SYNTHETIC_5_copy_INTERNAL_shuffle!_SHUFFLE_[:
  _ -> SYNTHETIC_5_copy_INTERNAL_wind2{; R; [
  ` -> SYNTHETIC_5_copy_INTERNAL_shuffle!_SHUFFLE_`; R; [
  ^ -> SYNTHETIC_5_copy_INTERNAL_shuffle!_SHUFFLE_^; R; [
  s -> SYNTHETIC_5_copy_INTERNAL_shuffle!_SHUFFLE_s; R; [
  S -> SYNTHETIC_5_copy_INTERNAL_shuffle!_SHUFFLE_S; R; [
  k -> SYNTHETIC_5_copy_INTERNAL_shuffle!_SHUFFLE_k; R; [
  K -> SYNTHETIC_5_copy_INTERNAL_shuffle!_SHUFFLE_K; R; [
  i -> SYNTHETIC_5_copy_INTERNAL_shuffle!_SHUFFLE_i; R; [
  I -> SYNTHETIC_5_copy_INTERNAL_shuffle!_SHUFFLE_I; R; [
  $ -> SYNTHETIC_5_copy_INTERNAL_shuffle!_SHUFFLE_$; R; [
  [ -> SYNTHETIC_5_copy_INTERNAL_shuffle!_SHUFFLE_[; R; [
  * -> SYNTHETIC_5_copy_INTERNAL_shuffle!_SHUFFLE_*; R; [
  ! -> SYNTHETIC_5_copy_INTERNAL_shuffle!; R; [
  { -> SYNTHETIC_5_copy_INTERNAL_shuffle!_SHUFFLE_{; R; [
SYNTHETIC_5_copy_INTERNAL_shuffle!_SHUFFLE_*:
  _ -> SYNTHETIC_5_copy_INTERNAL_wind2{; R; *
  ` -> SYNTHETIC_5_copy_INTERNAL_shuffle!_SHUFFLE_`; R; *
  ^ -> SYNTHETIC_5_copy_INTERNAL_shuffle!_SHUFFLE_^; R; *
  s -> SYNTHETIC_5_copy_INTERNAL_shuffle!_SHUFFLE_s; R; *
  S -> SYNTHETIC_5_copy_INTERNAL_shuffle!_SHUFFLE_S; R; *
  k -> SYNTHETIC_5_copy_INTERNAL_shuffle!_SHUFFLE_k; R; *
  K -> SYNTHETIC_5_copy_INTERNAL_shuffle!_SHUFFLE_K; R; *
  i -> SYNTHETIC_5_copy_INTERNAL_shuffle!_SHUFFLE_i; R; *
  I -> SYNTHETIC_5_copy_INTERNAL_shuffle!_SHUFFLE_I; R; *
  $ -> SYNTHETIC_5_copy_INTERNAL_shuffle!_SHUFFLE_$; R; *
  [ -> SYNTHETIC_5_copy_INTERNAL_shuffle!_SHUFFLE_[; R; *
  * -> SYNTHETIC_5_copy_INTERNAL_shuffle!_SHUFFLE_*; R; *
  ! -> SYNTHETIC_5_copy_INTERNAL_shuffle!; R; *
  { -> SYNTHETIC_5_copy_INTERNAL_shuffle!_SHUFFLE_{; R; *
SYNTHETIC_5_copy_INTERNAL_shuffle!:
  _ -> SYNTHETIC_5_copy_INTERNAL_wind2{; R; !
  ` -> SYNTHETIC_5_copy_INTERNAL_shuffle!_SHUFFLE_`; R; !
  ^ -> SYNTHETIC_5_copy_INTERNAL_shuffle!_SHUFFLE_^; R; !
  s -> SYNTHETIC_5_copy_INTERNAL_shuffle!_SHUFFLE_s; R; !
  S -> SYNTHETIC_5_copy_INTERNAL_shuffle!_SHUFFLE_S; R; !
  k -> SYNTHETIC_5_copy_INTERNAL_shuffle!_SHUFFLE_k; R; !
  K -> SYNTHETIC_5_copy_INTERNAL_shuffle!_SHUFFLE_K; R; !
  i -> SYNTHETIC_5_copy_INTERNAL_shuffle!_SHUFFLE_i; R; !
  I -> SYNTHETIC_5_copy_INTERNAL_shuffle!_SHUFFLE_I; R; !
  $ -> SYNTHETIC_5_copy_INTERNAL_shuffle!_SHUFFLE_$; R; !
  [ -> SYNTHETIC_5_copy_INTERNAL_shuffle!_SHUFFLE_[; R; !
  * -> SYNTHETIC_5_copy_INTERNAL_shuffle!_SHUFFLE_*; R; !
  ! -> SYNTHETIC_5_copy_INTERNAL_shuffle!; R; !
  { -> SYNTHETIC_5_copy_INTERNAL_shuffle!_SHUFFLE_{; R; !
SYNTHETIC_5_copy_INTERNAL_shuffle!_SHUFFLE_{:
  _ -> SYNTHETIC_5_copy_INTERNAL_wind2{; R; {
  ` -> SYNTHETIC_5_copy_INTERNAL_shuffle!_SHUFFLE_`; R; {
  ^ -> SYNTHETIC_5_copy_INTERNAL_shuffle!_SHUFFLE_^; R; {
  s -> SYNTHETIC_5_copy_INTERNAL_shuffle!_SHUFFLE_s; R; {
  S -> SYNTHETIC_5_copy_INTERNAL_shuffle!_SHUFFLE_S; R; {
  k -> SYNTHETIC_5_copy_INTERNAL_shuffle!_SHUFFLE_k; R; {
  K -> SYNTHETIC_5_copy_INTERNAL_shuffle!_SHUFFLE_K; R; {
  i -> SYNTHETIC_5_copy_INTERNAL_shuffle!_SHUFFLE_i; R; {
  I -> SYNTHETIC_5_copy_INTERNAL_shuffle!_SHUFFLE_I; R; {
  $ -> SYNTHETIC_5_copy_INTERNAL_shuffle!_SHUFFLE_$; R; {
  [ -> SYNTHETIC_5_copy_INTERNAL_shuffle!_SHUFFLE_[; R; {
  * -> SYNTHETIC_5_copy_INTERNAL_shuffle!_SHUFFLE_*; R; {
  ! -> SYNTHETIC_5_copy_INTERNAL_shuffle!; R; {
  { -> SYNTHETIC_5_copy_INTERNAL_shuffle!_SHUFFLE_{; R; {
SYNTHETIC_5_copy_COPY__:
  _ -> SYNTHETIC_5_copy_COPY__; L; _
  ` -> SYNTHETIC_5_copy_COPY__; L; `
  ^ -> SYNTHETIC_5_copy_COPY__; L; ^
  s -> SYNTHETIC_5_copy_COPY__; L; s
  S -> SYNTHETIC_5_copy_COPY__; L; S
  k -> SYNTHETIC_5_copy_COPY__; L; k
  K -> SYNTHETIC_5_copy_COPY__; L; K
  i -> SYNTHETIC_5_copy_COPY__; L; i
  I -> SYNTHETIC_5_copy_COPY__; L; I
  $ -> SYNTHETIC_5_copy_COPY__; L; $
  [ -> SYNTHETIC_5_copy_COPY__; L; [
  * -> SYNTHETIC_5_copy_COPY__; L; *
  ! -> SYNTHETIC_5_copy_INTERNAL_shuffle!; R; _
  { -> SYNTHETIC_5_copy_COPY__; L; _
SYNTHETIC_5_copy_COPY_`:
  _ -> SYNTHETIC_5_copy_COPY_`; L; _
  ` -> SYNTHETIC_5_copy_COPY_`; L; `
  ^ -> SYNTHETIC_5_copy_COPY_`; L; ^
  s -> SYNTHETIC_5_copy_COPY_`; L; s
  S -> SYNTHETIC_5_copy_COPY_`; L; S
  k -> SYNTHETIC_5_copy_COPY_`; L; k
  K -> SYNTHETIC_5_copy_COPY_`; L; K
  i -> SYNTHETIC_5_copy_COPY_`; L; i
  I -> SYNTHETIC_5_copy_COPY_`; L; I
  $ -> SYNTHETIC_5_copy_COPY_`; L; $
  [ -> SYNTHETIC_5_copy_COPY_`; L; [
  * -> SYNTHETIC_5_copy_COPY_`; L; *
  ! -> SYNTHETIC_5_copy_INTERNAL_shuffle!; R; `
  { -> SYNTHETIC_5_copy_COPY_`; L; `
SYNTHETIC_5_copy_COPY_^:
  _ -> SYNTHETIC_5_copy_COPY_^; L; _
  ` -> SYNTHETIC_5_copy_COPY_^; L; `
  ^ -> SYNTHETIC_5_copy_COPY_^; L; ^
  s -> SYNTHETIC_5_copy_COPY_^; L; s
  S -> SYNTHETIC_5_copy_COPY_^; L; S
  k -> SYNTHETIC_5_copy_COPY_^; L; k
  K -> SYNTHETIC_5_copy_COPY_^; L; K
  i -> SYNTHETIC_5_copy_COPY_^; L; i
  I -> SYNTHETIC_5_copy_COPY_^; L; I
  $ -> SYNTHETIC_5_copy_COPY_^; L; $
  [ -> SYNTHETIC_5_copy_COPY_^; L; [
  * -> SYNTHETIC_5_copy_COPY_^; L; *
  ! -> SYNTHETIC_5_copy_INTERNAL_shuffle!; R; ^
  { -> SYNTHETIC_5_copy_COPY_^; L; ^
SYNTHETIC_5_copy_COPY_s:
  _ -> SYNTHETIC_5_copy_COPY_s; L; _
  ` -> SYNTHETIC_5_copy_COPY_s; L; `
  ^ -> SYNTHETIC_5_copy_COPY_s; L; ^
  s -> SYNTHETIC_5_copy_COPY_s; L; s
  S -> SYNTHETIC_5_copy_COPY_s; L; S
  k -> SYNTHETIC_5_copy_COPY_s; L; k
  K -> SYNTHETIC_5_copy_COPY_s; L; K
  i -> SYNTHETIC_5_copy_COPY_s; L; i
  I -> SYNTHETIC_5_copy_COPY_s; L; I
  $ -> SYNTHETIC_5_copy_COPY_s; L; $
  [ -> SYNTHETIC_5_copy_COPY_s; L; [
  * -> SYNTHETIC_5_copy_COPY_s; L; *
  ! -> SYNTHETIC_5_copy_INTERNAL_shuffle!; R; s
  { -> SYNTHETIC_5_copy_COPY_s; L; s
SYNTHETIC_5_copy_COPY_S:
  _ -> SYNTHETIC_5_copy_COPY_S; L; _
  ` -> SYNTHETIC_5_copy_COPY_S; L; `
  ^ -> SYNTHETIC_5_copy_COPY_S; L; ^
  s -> SYNTHETIC_5_copy_COPY_S; L; s
  S -> SYNTHETIC_5_copy_COPY_S; L; S
  k -> SYNTHETIC_5_copy_COPY_S; L; k
  K -> SYNTHETIC_5_copy_COPY_S; L; K
  i -> SYNTHETIC_5_copy_COPY_S; L; i
  I -> SYNTHETIC_5_copy_COPY_S; L; I
  $ -> SYNTHETIC_5_copy_COPY_S; L; $
  [ -> SYNTHETIC_5_copy_COPY_S; L; [
  * -> SYNTHETIC_5_copy_COPY_S; L; *
  ! -> SYNTHETIC_5_copy_INTERNAL_shuffle!; R; S
  { -> SYNTHETIC_5_copy_COPY_S; L; S
SYNTHETIC_5_copy_COPY_k:
  _ -> SYNTHETIC_5_copy_COPY_k; L; _
  ` -> SYNTHETIC_5_copy_COPY_k; L; `
  ^ -> SYNTHETIC_5_copy_COPY_k; L; ^
  s -> SYNTHETIC_5_copy_COPY_k; L; s
  S -> SYNTHETIC_5_copy_COPY_k; L; S
  k -> SYNTHETIC_5_copy_COPY_k; L; k
  K -> SYNTHETIC_5_copy_COPY_k; L; K
  i -> SYNTHETIC_5_copy_COPY_k; L; i
  I -> SYNTHETIC_5_copy_COPY_k; L; I
  $ -> SYNTHETIC_5_copy_COPY_k; L; $
  [ -> SYNTHETIC_5_copy_COPY_k; L; [
  * -> SYNTHETIC_5_copy_COPY_k; L; *
  ! -> SYNTHETIC_5_copy_INTERNAL_shuffle!; R; k
  { -> SYNTHETIC_5_copy_COPY_k; L; k
SYNTHETIC_5_copy_COPY_K:
  _ -> SYNTHETIC_5_copy_COPY_K; L; _
  ` -> SYNTHETIC_5_copy_COPY_K; L; `
  ^ -> SYNTHETIC_5_copy_COPY_K; L; ^
  s -> SYNTHETIC_5_copy_COPY_K; L; s
  S -> SYNTHETIC_5_copy_COPY_K; L; S
  k -> SYNTHETIC_5_copy_COPY_K; L; k
  K -> SYNTHETIC_5_copy_COPY_K; L; K
  i -> SYNTHETIC_5_copy_COPY_K; L; i
  I -> SYNTHETIC_5_copy_COPY_K; L; I
  $ -> SYNTHETIC_5_copy_COPY_K; L; $
  [ -> SYNTHETIC_5_copy_COPY_K; L; [
  * -> SYNTHETIC_5_copy_COPY_K; L; *
  ! -> SYNTHETIC_5_copy_INTERNAL_shuffle!; R; K
  { -> SYNTHETIC_5_copy_COPY_K; L; K
SYNTHETIC_5_copy_COPY_i:
  _ -> SYNTHETIC_5_copy_COPY_i; L; _
  ` -> SYNTHETIC_5_copy_COPY_i; L; `
  ^ -> SYNTHETIC_5_copy_COPY_i; L; ^
  s -> SYNTHETIC_5_copy_COPY_i; L; s
  S -> SYNTHETIC_5_copy_COPY_i; L; S
  k -> SYNTHETIC_5_copy_COPY_i; L; k
  K -> SYNTHETIC_5_copy_COPY_i; L; K
  i -> SYNTHETIC_5_copy_COPY_i; L; i
  I -> SYNTHETIC_5_copy_COPY_i; L; I
  $ -> SYNTHETIC_5_copy_COPY_i; L; $
  [ -> SYNTHETIC_5_copy_COPY_i; L; [
  * -> SYNTHETIC_5_copy_COPY_i; L; *
  ! -> SYNTHETIC_5_copy_INTERNAL_shuffle!; R; i
  { -> SYNTHETIC_5_copy_COPY_i; L; i
SYNTHETIC_5_copy_COPY_I:
  _ -> SYNTHETIC_5_copy_COPY_I; L; _
  ` -> SYNTHETIC_5_copy_COPY_I; L; `
  ^ -> SYNTHETIC_5_copy_COPY_I; L; ^
  s -> SYNTHETIC_5_copy_COPY_I; L; s
  S -> SYNTHETIC_5_copy_COPY_I; L; S
  k -> SYNTHETIC_5_copy_COPY_I; L; k
  K -> SYNTHETIC_5_copy_COPY_I; L; K
  i -> SYNTHETIC_5_copy_COPY_I; L; i
  I -> SYNTHETIC_5_copy_COPY_I; L; I
  $ -> SYNTHETIC_5_copy_COPY_I; L; $
  [ -> SYNTHETIC_5_copy_COPY_I; L; [
  * -> SYNTHETIC_5_copy_COPY_I; L; *
  ! -> SYNTHETIC_5_copy_INTERNAL_shuffle!; R; I
  { -> SYNTHETIC_5_copy_COPY_I; L; I
SYNTHETIC_5_copy_COPY_$:
  _ -> SYNTHETIC_5_copy_COPY_$; L; _
  ` -> SYNTHETIC_5_copy_COPY_$; L; `
  ^ -> SYNTHETIC_5_copy_COPY_$; L; ^
  s -> SYNTHETIC_5_copy_COPY_$; L; s
  S -> SYNTHETIC_5_copy_COPY_$; L; S
  k -> SYNTHETIC_5_copy_COPY_$; L; k
  K -> SYNTHETIC_5_copy_COPY_$; L; K
  i -> SYNTHETIC_5_copy_COPY_$; L; i
  I -> SYNTHETIC_5_copy_COPY_$; L; I
  $ -> SYNTHETIC_5_copy_COPY_$; L; $
  [ -> SYNTHETIC_5_copy_COPY_$; L; [
  * -> SYNTHETIC_5_copy_COPY_$; L; *
  ! -> SYNTHETIC_5_copy_INTERNAL_shuffle!; R; $
  { -> SYNTHETIC_5_copy_COPY_$; L; $
SYNTHETIC_5_copy_COPY_[:
  _ -> SYNTHETIC_5_copy_COPY_[; L; _
  ` -> SYNTHETIC_5_copy_COPY_[; L; `
  ^ -> SYNTHETIC_5_copy_COPY_[; L; ^
  s -> SYNTHETIC_5_copy_COPY_[; L; s
  S -> SYNTHETIC_5_copy_COPY_[; L; S
  k -> SYNTHETIC_5_copy_COPY_[; L; k
  K -> SYNTHETIC_5_copy_COPY_[; L; K
  i -> SYNTHETIC_5_copy_COPY_[; L; i
  I -> SYNTHETIC_5_copy_COPY_[; L; I
  $ -> SYNTHETIC_5_copy_COPY_[; L; $
  [ -> SYNTHETIC_5_copy_COPY_[; L; [
  * -> SYNTHETIC_5_copy_COPY_[; L; *
  ! -> SYNTHETIC_5_copy_INTERNAL_shuffle!; R; [
  { -> SYNTHETIC_5_copy_COPY_[; L; [
SYNTHETIC_5_copy_COPY_!:
  _ -> SYNTHETIC_5_copy_COPY_!; L; _
  ` -> SYNTHETIC_5_copy_COPY_!; L; `
  ^ -> SYNTHETIC_5_copy_COPY_!; L; ^
  s -> SYNTHETIC_5_copy_COPY_!; L; s
  S -> SYNTHETIC_5_copy_COPY_!; L; S
  k -> SYNTHETIC_5_copy_COPY_!; L; k
  K -> SYNTHETIC_5_copy_COPY_!; L; K
  i -> SYNTHETIC_5_copy_COPY_!; L; i
  I -> SYNTHETIC_5_copy_COPY_!; L; I
  $ -> SYNTHETIC_5_copy_COPY_!; L; $
  [ -> SYNTHETIC_5_copy_COPY_!; L; [
  * -> SYNTHETIC_5_copy_COPY_!; L; *
  ! -> SYNTHETIC_5_copy_INTERNAL_shuffle!; R; !
  { -> SYNTHETIC_5_copy_COPY_!; L; !
SYNTHETIC_5_copy_COPY_{:
  _ -> SYNTHETIC_5_copy_COPY_{; L; _
  ` -> SYNTHETIC_5_copy_COPY_{; L; `
  ^ -> SYNTHETIC_5_copy_COPY_{; L; ^
  s -> SYNTHETIC_5_copy_COPY_{; L; s
  S -> SYNTHETIC_5_copy_COPY_{; L; S
  k -> SYNTHETIC_5_copy_COPY_{; L; k
  K -> SYNTHETIC_5_copy_COPY_{; L; K
  i -> SYNTHETIC_5_copy_COPY_{; L; i
  I -> SYNTHETIC_5_copy_COPY_{; L; I
  $ -> SYNTHETIC_5_copy_COPY_{; L; $
  [ -> SYNTHETIC_5_copy_COPY_{; L; [
  * -> SYNTHETIC_5_copy_COPY_{; L; *
  ! -> SYNTHETIC_5_copy_INTERNAL_shuffle!; R; {
  { -> SYNTHETIC_5_copy_COPY_{; L; {
evaluate_s_clean_up:
  _ -> evaluate_s_clean_up; L; _
  ` -> evaluate_s_clean_up; L; `
  ^ -> evaluate_s_clean_up; L; ^
  s -> evaluate_s_clean_up; L; s
  S -> evaluate_s_clean_up; L; S
  k -> evaluate_s_clean_up; L; k
  K -> evaluate_s_clean_up; L; K
  i -> evaluate_s_clean_up; L; i
  I -> evaluate_s_clean_up; L; I
  $ -> evaluate_s_clean_up; L; $
  [ -> evaluate_s_clean_up_head; L; _
  * -> evaluate_s_clean_up; L; _
  ! -> evaluate_s_clean_up; L; `
  { -> evaluate_s_clean_up; L; _
evaluate_s_clean_up_head:
  _ -> ERROR; L; _
  ` -> ERROR; L; `
  ^ -> normalise_matched_expression; L; `
  s -> evaluate_s_clean_up_head; L; _
  S -> ERROR; L; S
  k -> ERROR; L; k
  K -> ERROR; L; K
  i -> ERROR; L; i
  I -> ERROR; L; I
  $ -> ERROR; L; $
  [ -> ERROR; L; [
  * -> ERROR; L; *
  ! -> ERROR; L; !
  { -> ERROR; L; {
match_expression:
  _ -> match_expression; R; _
  ` -> match_expression_`; R; `
  ^ -> match_expression; R; ^
  s -> match_expression_return_to_complete; R; s
  S -> match_expression; R; S
  k -> match_expression_return_to_complete; R; k
  K -> match_expression; R; K
  i -> match_expression_return_to_complete; R; i
  I -> match_expression; R; I
  $ -> match_expression; R; $
  [ -> match_expression; R; [
  * -> ERROR; R; *
  ! -> match_expression; R; !
  { -> match_expression; R; {
match_expression_return_to_complete:
  _ -> match_expression_return_to_complete; L; _
  ` -> match_expression_return_to_complete; L; `
  ^ -> match_expression_return_to_complete; L; ^
  s -> match_expression_return_to_complete; L; s
  S -> match_expression_return_to_complete; L; S
  k -> match_expression_return_to_complete; L; k
  K -> match_expression_return_to_complete; L; K
  i -> match_expression_return_to_complete; L; i
  I -> match_expression_return_to_complete; L; I
  $ -> ERROR; L; $
  [ -> match_expression_complete; R; [
  * -> match_expression_return_to_complete; L; *
  ! -> match_expression_return_to_complete; L; !
  { -> match_expression_complete; R; {
match_expression_`:
  _ -> match_expression_`; R; _
  ` -> match_expression_`; R; `
  ^ -> match_expression_`; R; ^
  s -> match_expression_`l; R; s
  S -> match_expression_`; R; S
  k -> match_expression_`l; R; k
  K -> match_expression_`; R; K
  i -> match_expression_`l; R; i
  I -> match_expression_`; R; I
  $ -> match_expression_`; R; $
  [ -> match_expression_`; R; [
  * -> ERROR; R; *
  ! -> match_expression_`; R; !
  { -> match_expression_`; R; {
match_expression_`l:
  _ -> match_expression_`l; R; _
  ` -> match_expression_`; R; `
  ^ -> match_expression_`l; R; ^
  s -> match_expression_update_tick; L; S
  S -> match_expression_`l; R; S
  k -> match_expression_update_tick; L; K
  K -> match_expression_`l; R; K
  i -> match_expression_update_tick; L; I
  I -> match_expression_`l; R; I
  $ -> match_expression_`l; R; $
  [ -> match_expression_`l; R; [
  * -> ERROR; R; *
  ! -> match_expression_`l; R; !
  { -> match_expression_`l; R; {
match_expression_update_tick:
  _ -> match_expression_update_tick; L; _
  ` -> match_expression_update_tick_return; L; ^
  ^ -> match_expression_update_tick; L; ^
  s -> match_expression_update_tick; L; s
  S -> match_expression_update_tick; L; S
  k -> match_expression_update_tick; L; k
  K -> match_expression_update_tick; L; K
  i -> match_expression_update_tick; L; i
  I -> match_expression_update_tick; L; I
  $ -> match_expression_update_tick; L; $
  [ -> match_expression_update_tick; L; [
  * -> match_expression_update_tick; L; *
  ! -> match_expression_update_tick; L; !
  { -> match_expression_update_tick; L; {
match_expression_update_tick_return:
  _ -> match_expression_update_tick_return; L; _
  ` -> match_expression_update_tick_return; L; `
  ^ -> match_expression_update_tick_return; L; ^
  s -> match_expression_update_tick_return; L; s
  S -> match_expression_update_tick_return; L; S
  k -> match_expression_update_tick_return; L; k
  K -> match_expression_update_tick_return; L; K
  i -> match_expression_update_tick_return; L; i
  I -> match_expression_update_tick_return; L; I
  $ -> match_expression_update_tick_return; L; $
  [ -> match_expression; R; [
  * -> match_expression_update_tick_return; L; *
  ! -> match_expression_update_tick_return; L; !
  { -> match_expression; R; {
match_expression_complete:
  _ -> match_expression_complete; R; _
  ` -> match_expression_complete; R; `
  ^ -> match_expression_complete; R; ^
  s -> match_expression_complete2; R; s
  S -> match_expression_complete; R; S
  k -> match_expression_complete2; R; k
  K -> match_expression_complete; R; K
  i -> match_expression_complete2; R; i
  I -> match_expression_complete; R; I
  $ -> match_expression_complete; R; $
  [ -> match_expression_complete; R; [
  * -> ERROR; R; *
  ! -> match_expression_complete; R; !
  { -> match_expression_complete; R; {
match_expression_complete2:
  _ -> match_expression_complete2; R; _
  ` -> SYNTHETIC_15_step; R; `
  ^ -> match_expression_complete2; R; ^
  s -> SYNTHETIC_7_step; R; s
  S -> match_expression_complete2; R; S
  k -> SYNTHETIC_9_step; R; k
  K -> match_expression_complete2; R; K
  i -> SYNTHETIC_11_step; R; i
  I -> match_expression_complete2; R; I
  $ -> match_expression_complete2; R; $
  [ -> match_expression_complete2; R; [
  * -> SYNTHETIC_17_step; R; *
  ! -> match_expression_complete2; R; !
  { -> match_expression_complete2; R; {
SYNTHETIC_6_shuffle2_SHUFFLE__:
  _ -> START; L; _
  ` -> SYNTHETIC_6_shuffle2_SHUFFLE_`; R; _
  ^ -> SYNTHETIC_6_shuffle2_SHUFFLE_^; R; _
  s -> SYNTHETIC_6_shuffle2_SHUFFLE_s; R; _
  S -> SYNTHETIC_6_shuffle2_SHUFFLE_S; R; _
  k -> SYNTHETIC_6_shuffle2_SHUFFLE_k; R; _
  K -> SYNTHETIC_6_shuffle2_SHUFFLE_K; R; _
  i -> SYNTHETIC_6_shuffle2_SHUFFLE_i; R; _
  I -> SYNTHETIC_6_shuffle2_SHUFFLE_I; R; _
  $ -> SYNTHETIC_6_shuffle2_SHUFFLE_$; R; _
  [ -> SYNTHETIC_6_shuffle2_SHUFFLE_[; R; _
  * -> SYNTHETIC_6_shuffle2; R; _
  ! -> SYNTHETIC_6_shuffle2_SHUFFLE_!; R; _
  { -> SYNTHETIC_6_shuffle2_SHUFFLE_{; R; _
SYNTHETIC_6_shuffle2_SHUFFLE_`:
  _ -> START; L; `
  ` -> SYNTHETIC_6_shuffle2_SHUFFLE_`; R; `
  ^ -> SYNTHETIC_6_shuffle2_SHUFFLE_^; R; `
  s -> SYNTHETIC_6_shuffle2_SHUFFLE_s; R; `
  S -> SYNTHETIC_6_shuffle2_SHUFFLE_S; R; `
  k -> SYNTHETIC_6_shuffle2_SHUFFLE_k; R; `
  K -> SYNTHETIC_6_shuffle2_SHUFFLE_K; R; `
  i -> SYNTHETIC_6_shuffle2_SHUFFLE_i; R; `
  I -> SYNTHETIC_6_shuffle2_SHUFFLE_I; R; `
  $ -> SYNTHETIC_6_shuffle2_SHUFFLE_$; R; `
  [ -> SYNTHETIC_6_shuffle2_SHUFFLE_[; R; `
  * -> SYNTHETIC_6_shuffle2; R; `
  ! -> SYNTHETIC_6_shuffle2_SHUFFLE_!; R; `
  { -> SYNTHETIC_6_shuffle2_SHUFFLE_{; R; `
SYNTHETIC_6_shuffle2_SHUFFLE_^:
  _ -> START; L; ^
  ` -> SYNTHETIC_6_shuffle2_SHUFFLE_`; R; ^
  ^ -> SYNTHETIC_6_shuffle2_SHUFFLE_^; R; ^
  s -> SYNTHETIC_6_shuffle2_SHUFFLE_s; R; ^
  S -> SYNTHETIC_6_shuffle2_SHUFFLE_S; R; ^
  k -> SYNTHETIC_6_shuffle2_SHUFFLE_k; R; ^
  K -> SYNTHETIC_6_shuffle2_SHUFFLE_K; R; ^
  i -> SYNTHETIC_6_shuffle2_SHUFFLE_i; R; ^
  I -> SYNTHETIC_6_shuffle2_SHUFFLE_I; R; ^
  $ -> SYNTHETIC_6_shuffle2_SHUFFLE_$; R; ^
  [ -> SYNTHETIC_6_shuffle2_SHUFFLE_[; R; ^
  * -> SYNTHETIC_6_shuffle2; R; ^
  ! -> SYNTHETIC_6_shuffle2_SHUFFLE_!; R; ^
  { -> SYNTHETIC_6_shuffle2_SHUFFLE_{; R; ^
SYNTHETIC_6_shuffle2_SHUFFLE_s:
  _ -> START; L; s
  ` -> SYNTHETIC_6_shuffle2_SHUFFLE_`; R; s
  ^ -> SYNTHETIC_6_shuffle2_SHUFFLE_^; R; s
  s -> SYNTHETIC_6_shuffle2_SHUFFLE_s; R; s
  S -> SYNTHETIC_6_shuffle2_SHUFFLE_S; R; s
  k -> SYNTHETIC_6_shuffle2_SHUFFLE_k; R; s
  K -> SYNTHETIC_6_shuffle2_SHUFFLE_K; R; s
  i -> SYNTHETIC_6_shuffle2_SHUFFLE_i; R; s
  I -> SYNTHETIC_6_shuffle2_SHUFFLE_I; R; s
  $ -> SYNTHETIC_6_shuffle2_SHUFFLE_$; R; s
  [ -> SYNTHETIC_6_shuffle2_SHUFFLE_[; R; s
  * -> SYNTHETIC_6_shuffle2; R; s
  ! -> SYNTHETIC_6_shuffle2_SHUFFLE_!; R; s
  { -> SYNTHETIC_6_shuffle2_SHUFFLE_{; R; s
SYNTHETIC_6_shuffle2_SHUFFLE_S:
  _ -> START; L; S
  ` -> SYNTHETIC_6_shuffle2_SHUFFLE_`; R; S
  ^ -> SYNTHETIC_6_shuffle2_SHUFFLE_^; R; S
  s -> SYNTHETIC_6_shuffle2_SHUFFLE_s; R; S
  S -> SYNTHETIC_6_shuffle2_SHUFFLE_S; R; S
  k -> SYNTHETIC_6_shuffle2_SHUFFLE_k; R; S
  K -> SYNTHETIC_6_shuffle2_SHUFFLE_K; R; S
  i -> SYNTHETIC_6_shuffle2_SHUFFLE_i; R; S
  I -> SYNTHETIC_6_shuffle2_SHUFFLE_I; R; S
  $ -> SYNTHETIC_6_shuffle2_SHUFFLE_$; R; S
  [ -> SYNTHETIC_6_shuffle2_SHUFFLE_[; R; S
  * -> SYNTHETIC_6_shuffle2; R; S
  ! -> SYNTHETIC_6_shuffle2_SHUFFLE_!; R; S
  { -> SYNTHETIC_6_shuffle2_SHUFFLE_{; R; S
SYNTHETIC_6_shuffle2_SHUFFLE_k:
  _ -> START; L; k
  ` -> SYNTHETIC_6_shuffle2_SHUFFLE_`; R; k
  ^ -> SYNTHETIC_6_shuffle2_SHUFFLE_^; R; k
  s -> SYNTHETIC_6_shuffle2_SHUFFLE_s; R; k
  S -> SYNTHETIC_6_shuffle2_SHUFFLE_S; R; k
  k -> SYNTHETIC_6_shuffle2_SHUFFLE_k; R; k
  K -> SYNTHETIC_6_shuffle2_SHUFFLE_K; R; k
  i -> SYNTHETIC_6_shuffle2_SHUFFLE_i; R; k
  I -> SYNTHETIC_6_shuffle2_SHUFFLE_I; R; k
  $ -> SYNTHETIC_6_shuffle2_SHUFFLE_$; R; k
  [ -> SYNTHETIC_6_shuffle2_SHUFFLE_[; R; k
  * -> SYNTHETIC_6_shuffle2; R; k
  ! -> SYNTHETIC_6_shuffle2_SHUFFLE_!; R; k
  { -> SYNTHETIC_6_shuffle2_SHUFFLE_{; R; k
SYNTHETIC_6_shuffle2_SHUFFLE_K:
  _ -> START; L; K
  ` -> SYNTHETIC_6_shuffle2_SHUFFLE_`; R; K
  ^ -> SYNTHETIC_6_shuffle2_SHUFFLE_^; R; K
  s -> SYNTHETIC_6_shuffle2_SHUFFLE_s; R; K
  S -> SYNTHETIC_6_shuffle2_SHUFFLE_S; R; K
  k -> SYNTHETIC_6_shuffle2_SHUFFLE_k; R; K
  K -> SYNTHETIC_6_shuffle2_SHUFFLE_K; R; K
  i -> SYNTHETIC_6_shuffle2_SHUFFLE_i; R; K
  I -> SYNTHETIC_6_shuffle2_SHUFFLE_I; R; K
  $ -> SYNTHETIC_6_shuffle2_SHUFFLE_$; R; K
  [ -> SYNTHETIC_6_shuffle2_SHUFFLE_[; R; K
  * -> SYNTHETIC_6_shuffle2; R; K
  ! -> SYNTHETIC_6_shuffle2_SHUFFLE_!; R; K
  { -> SYNTHETIC_6_shuffle2_SHUFFLE_{; R; K
SYNTHETIC_6_shuffle2_SHUFFLE_i:
  _ -> START; L; i
  ` -> SYNTHETIC_6_shuffle2_SHUFFLE_`; R; i
  ^ -> SYNTHETIC_6_shuffle2_SHUFFLE_^; R; i
  s -> SYNTHETIC_6_shuffle2_SHUFFLE_s; R; i
  S -> SYNTHETIC_6_shuffle2_SHUFFLE_S; R; i
  k -> SYNTHETIC_6_shuffle2_SHUFFLE_k; R; i
  K -> SYNTHETIC_6_shuffle2_SHUFFLE_K; R; i
  i -> SYNTHETIC_6_shuffle2_SHUFFLE_i; R; i
  I -> SYNTHETIC_6_shuffle2_SHUFFLE_I; R; i
  $ -> SYNTHETIC_6_shuffle2_SHUFFLE_$; R; i
  [ -> SYNTHETIC_6_shuffle2_SHUFFLE_[; R; i
  * -> SYNTHETIC_6_shuffle2; R; i
  ! -> SYNTHETIC_6_shuffle2_SHUFFLE_!; R; i
  { -> SYNTHETIC_6_shuffle2_SHUFFLE_{; R; i
SYNTHETIC_6_shuffle2_SHUFFLE_I:
  _ -> START; L; I
  ` -> SYNTHETIC_6_shuffle2_SHUFFLE_`; R; I
  ^ -> SYNTHETIC_6_shuffle2_SHUFFLE_^; R; I
  s -> SYNTHETIC_6_shuffle2_SHUFFLE_s; R; I
  S -> SYNTHETIC_6_shuffle2_SHUFFLE_S; R; I
  k -> SYNTHETIC_6_shuffle2_SHUFFLE_k; R; I
  K -> SYNTHETIC_6_shuffle2_SHUFFLE_K; R; I
  i -> SYNTHETIC_6_shuffle2_SHUFFLE_i; R; I
  I -> SYNTHETIC_6_shuffle2_SHUFFLE_I; R; I
  $ -> SYNTHETIC_6_shuffle2_SHUFFLE_$; R; I
  [ -> SYNTHETIC_6_shuffle2_SHUFFLE_[; R; I
  * -> SYNTHETIC_6_shuffle2; R; I
  ! -> SYNTHETIC_6_shuffle2_SHUFFLE_!; R; I
  { -> SYNTHETIC_6_shuffle2_SHUFFLE_{; R; I
SYNTHETIC_6_shuffle2_SHUFFLE_$:
  _ -> START; L; $
  ` -> SYNTHETIC_6_shuffle2_SHUFFLE_`; R; $
  ^ -> SYNTHETIC_6_shuffle2_SHUFFLE_^; R; $
  s -> SYNTHETIC_6_shuffle2_SHUFFLE_s; R; $
  S -> SYNTHETIC_6_shuffle2_SHUFFLE_S; R; $
  k -> SYNTHETIC_6_shuffle2_SHUFFLE_k; R; $
  K -> SYNTHETIC_6_shuffle2_SHUFFLE_K; R; $
  i -> SYNTHETIC_6_shuffle2_SHUFFLE_i; R; $
  I -> SYNTHETIC_6_shuffle2_SHUFFLE_I; R; $
  $ -> SYNTHETIC_6_shuffle2_SHUFFLE_$; R; $
  [ -> SYNTHETIC_6_shuffle2_SHUFFLE_[; R; $
  * -> SYNTHETIC_6_shuffle2; R; $
  ! -> SYNTHETIC_6_shuffle2_SHUFFLE_!; R; $
  { -> SYNTHETIC_6_shuffle2_SHUFFLE_{; R; $
SYNTHETIC_6_shuffle2_SHUFFLE_[:
  _ -> START; L; [
  ` -> SYNTHETIC_6_shuffle2_SHUFFLE_`; R; [
  ^ -> SYNTHETIC_6_shuffle2_SHUFFLE_^; R; [
  s -> SYNTHETIC_6_shuffle2_SHUFFLE_s; R; [
  S -> SYNTHETIC_6_shuffle2_SHUFFLE_S; R; [
  k -> SYNTHETIC_6_shuffle2_SHUFFLE_k; R; [
  K -> SYNTHETIC_6_shuffle2_SHUFFLE_K; R; [
  i -> SYNTHETIC_6_shuffle2_SHUFFLE_i; R; [
  I -> SYNTHETIC_6_shuffle2_SHUFFLE_I; R; [
  $ -> SYNTHETIC_6_shuffle2_SHUFFLE_$; R; [
  [ -> SYNTHETIC_6_shuffle2_SHUFFLE_[; R; [
  * -> SYNTHETIC_6_shuffle2; R; [
  ! -> SYNTHETIC_6_shuffle2_SHUFFLE_!; R; [
  { -> SYNTHETIC_6_shuffle2_SHUFFLE_{; R; [
SYNTHETIC_6_shuffle2:
  _ -> START; L; *
  ` -> SYNTHETIC_6_shuffle2_SHUFFLE_`; R; *
  ^ -> SYNTHETIC_6_shuffle2_SHUFFLE_^; R; *
  s -> SYNTHETIC_6_shuffle2_SHUFFLE_s; R; *
  S -> SYNTHETIC_6_shuffle2_SHUFFLE_S; R; *
  k -> SYNTHETIC_6_shuffle2_SHUFFLE_k; R; *
  K -> SYNTHETIC_6_shuffle2_SHUFFLE_K; R; *
  i -> SYNTHETIC_6_shuffle2_SHUFFLE_i; R; *
  I -> SYNTHETIC_6_shuffle2_SHUFFLE_I; R; *
  $ -> SYNTHETIC_6_shuffle2_SHUFFLE_$; R; *
  [ -> SYNTHETIC_6_shuffle2_SHUFFLE_[; R; *
  * -> SYNTHETIC_6_shuffle2; R; *
  ! -> SYNTHETIC_6_shuffle2_SHUFFLE_!; R; *
  { -> SYNTHETIC_6_shuffle2_SHUFFLE_{; R; *
SYNTHETIC_6_shuffle2_SHUFFLE_!:
  _ -> START; L; !
  ` -> SYNTHETIC_6_shuffle2_SHUFFLE_`; R; !
  ^ -> SYNTHETIC_6_shuffle2_SHUFFLE_^; R; !
  s -> SYNTHETIC_6_shuffle2_SHUFFLE_s; R; !
  S -> SYNTHETIC_6_shuffle2_SHUFFLE_S; R; !
  k -> SYNTHETIC_6_shuffle2_SHUFFLE_k; R; !
  K -> SYNTHETIC_6_shuffle2_SHUFFLE_K; R; !
  i -> SYNTHETIC_6_shuffle2_SHUFFLE_i; R; !
  I -> SYNTHETIC_6_shuffle2_SHUFFLE_I; R; !
  $ -> SYNTHETIC_6_shuffle2_SHUFFLE_$; R; !
  [ -> SYNTHETIC_6_shuffle2_SHUFFLE_[; R; !
  * -> SYNTHETIC_6_shuffle2; R; !
  ! -> SYNTHETIC_6_shuffle2_SHUFFLE_!; R; !
  { -> SYNTHETIC_6_shuffle2_SHUFFLE_{; R; !
SYNTHETIC_6_shuffle2_SHUFFLE_{:
  _ -> START; L; {
  ` -> SYNTHETIC_6_shuffle2_SHUFFLE_`; R; {
  ^ -> SYNTHETIC_6_shuffle2_SHUFFLE_^; R; {
  s -> SYNTHETIC_6_shuffle2_SHUFFLE_s; R; {
  S -> SYNTHETIC_6_shuffle2_SHUFFLE_S; R; {
  k -> SYNTHETIC_6_shuffle2_SHUFFLE_k; R; {
  K -> SYNTHETIC_6_shuffle2_SHUFFLE_K; R; {
  i -> SYNTHETIC_6_shuffle2_SHUFFLE_i; R; {
  I -> SYNTHETIC_6_shuffle2_SHUFFLE_I; R; {
  $ -> SYNTHETIC_6_shuffle2_SHUFFLE_$; R; {
  [ -> SYNTHETIC_6_shuffle2_SHUFFLE_[; R; {
  * -> SYNTHETIC_6_shuffle2; R; {
  ! -> SYNTHETIC_6_shuffle2_SHUFFLE_!; R; {
  { -> SYNTHETIC_6_shuffle2_SHUFFLE_{; R; {
SYNTHETIC_7_step:
  _ -> SYNTHETIC_6_shuffle2; L; _
  ` -> SYNTHETIC_6_shuffle2; L; `
  ^ -> SYNTHETIC_6_shuffle2; L; ^
  s -> SYNTHETIC_6_shuffle2; L; s
  S -> SYNTHETIC_6_shuffle2; L; S
  k -> SYNTHETIC_6_shuffle2; L; k
  K -> SYNTHETIC_6_shuffle2; L; K
  i -> SYNTHETIC_6_shuffle2; L; i
  I -> SYNTHETIC_6_shuffle2; L; I
  $ -> SYNTHETIC_6_shuffle2; L; $
  [ -> SYNTHETIC_6_shuffle2; L; [
  * -> SYNTHETIC_6_shuffle2; L; *
  ! -> SYNTHETIC_6_shuffle2; L; !
  { -> SYNTHETIC_6_shuffle2; L; {
SYNTHETIC_8_shuffle2_SHUFFLE__:
  _ -> START; L; _
  ` -> SYNTHETIC_8_shuffle2_SHUFFLE_`; R; _
  ^ -> SYNTHETIC_8_shuffle2_SHUFFLE_^; R; _
  s -> SYNTHETIC_8_shuffle2_SHUFFLE_s; R; _
  S -> SYNTHETIC_8_shuffle2_SHUFFLE_S; R; _
  k -> SYNTHETIC_8_shuffle2_SHUFFLE_k; R; _
  K -> SYNTHETIC_8_shuffle2_SHUFFLE_K; R; _
  i -> SYNTHETIC_8_shuffle2_SHUFFLE_i; R; _
  I -> SYNTHETIC_8_shuffle2_SHUFFLE_I; R; _
  $ -> SYNTHETIC_8_shuffle2_SHUFFLE_$; R; _
  [ -> SYNTHETIC_8_shuffle2_SHUFFLE_[; R; _
  * -> SYNTHETIC_8_shuffle2; R; _
  ! -> SYNTHETIC_8_shuffle2_SHUFFLE_!; R; _
  { -> SYNTHETIC_8_shuffle2_SHUFFLE_{; R; _
SYNTHETIC_8_shuffle2_SHUFFLE_`:
  _ -> START; L; `
  ` -> SYNTHETIC_8_shuffle2_SHUFFLE_`; R; `
  ^ -> SYNTHETIC_8_shuffle2_SHUFFLE_^; R; `
  s -> SYNTHETIC_8_shuffle2_SHUFFLE_s; R; `
  S -> SYNTHETIC_8_shuffle2_SHUFFLE_S; R; `
  k -> SYNTHETIC_8_shuffle2_SHUFFLE_k; R; `
  K -> SYNTHETIC_8_shuffle2_SHUFFLE_K; R; `
  i -> SYNTHETIC_8_shuffle2_SHUFFLE_i; R; `
  I -> SYNTHETIC_8_shuffle2_SHUFFLE_I; R; `
  $ -> SYNTHETIC_8_shuffle2_SHUFFLE_$; R; `
  [ -> SYNTHETIC_8_shuffle2_SHUFFLE_[; R; `
  * -> SYNTHETIC_8_shuffle2; R; `
  ! -> SYNTHETIC_8_shuffle2_SHUFFLE_!; R; `
  { -> SYNTHETIC_8_shuffle2_SHUFFLE_{; R; `
SYNTHETIC_8_shuffle2_SHUFFLE_^:
  _ -> START; L; ^
  ` -> SYNTHETIC_8_shuffle2_SHUFFLE_`; R; ^
  ^ -> SYNTHETIC_8_shuffle2_SHUFFLE_^; R; ^
  s -> SYNTHETIC_8_shuffle2_SHUFFLE_s; R; ^
  S -> SYNTHETIC_8_shuffle2_SHUFFLE_S; R; ^
  k -> SYNTHETIC_8_shuffle2_SHUFFLE_k; R; ^
  K -> SYNTHETIC_8_shuffle2_SHUFFLE_K; R; ^
  i -> SYNTHETIC_8_shuffle2_SHUFFLE_i; R; ^
  I -> SYNTHETIC_8_shuffle2_SHUFFLE_I; R; ^
  $ -> SYNTHETIC_8_shuffle2_SHUFFLE_$; R; ^
  [ -> SYNTHETIC_8_shuffle2_SHUFFLE_[; R; ^
  * -> SYNTHETIC_8_shuffle2; R; ^
  ! -> SYNTHETIC_8_shuffle2_SHUFFLE_!; R; ^
  { -> SYNTHETIC_8_shuffle2_SHUFFLE_{; R; ^
SYNTHETIC_8_shuffle2_SHUFFLE_s:
  _ -> START; L; s
  ` -> SYNTHETIC_8_shuffle2_SHUFFLE_`; R; s
  ^ -> SYNTHETIC_8_shuffle2_SHUFFLE_^; R; s
  s -> SYNTHETIC_8_shuffle2_SHUFFLE_s; R; s
  S -> SYNTHETIC_8_shuffle2_SHUFFLE_S; R; s
  k -> SYNTHETIC_8_shuffle2_SHUFFLE_k; R; s
  K -> SYNTHETIC_8_shuffle2_SHUFFLE_K; R; s
  i -> SYNTHETIC_8_shuffle2_SHUFFLE_i; R; s
  I -> SYNTHETIC_8_shuffle2_SHUFFLE_I; R; s
  $ -> SYNTHETIC_8_shuffle2_SHUFFLE_$; R; s
  [ -> SYNTHETIC_8_shuffle2_SHUFFLE_[; R; s
  * -> SYNTHETIC_8_shuffle2; R; s
  ! -> SYNTHETIC_8_shuffle2_SHUFFLE_!; R; s
  { -> SYNTHETIC_8_shuffle2_SHUFFLE_{; R; s
SYNTHETIC_8_shuffle2_SHUFFLE_S:
  _ -> START; L; S
  ` -> SYNTHETIC_8_shuffle2_SHUFFLE_`; R; S
  ^ -> SYNTHETIC_8_shuffle2_SHUFFLE_^; R; S
  s -> SYNTHETIC_8_shuffle2_SHUFFLE_s; R; S
  S -> SYNTHETIC_8_shuffle2_SHUFFLE_S; R; S
  k -> SYNTHETIC_8_shuffle2_SHUFFLE_k; R; S
  K -> SYNTHETIC_8_shuffle2_SHUFFLE_K; R; S
  i -> SYNTHETIC_8_shuffle2_SHUFFLE_i; R; S
  I -> SYNTHETIC_8_shuffle2_SHUFFLE_I; R; S
  $ -> SYNTHETIC_8_shuffle2_SHUFFLE_$; R; S
  [ -> SYNTHETIC_8_shuffle2_SHUFFLE_[; R; S
  * -> SYNTHETIC_8_shuffle2; R; S
  ! -> SYNTHETIC_8_shuffle2_SHUFFLE_!; R; S
  { -> SYNTHETIC_8_shuffle2_SHUFFLE_{; R; S
SYNTHETIC_8_shuffle2_SHUFFLE_k:
  _ -> START; L; k
  ` -> SYNTHETIC_8_shuffle2_SHUFFLE_`; R; k
  ^ -> SYNTHETIC_8_shuffle2_SHUFFLE_^; R; k
  s -> SYNTHETIC_8_shuffle2_SHUFFLE_s; R; k
  S -> SYNTHETIC_8_shuffle2_SHUFFLE_S; R; k
  k -> SYNTHETIC_8_shuffle2_SHUFFLE_k; R; k
  K -> SYNTHETIC_8_shuffle2_SHUFFLE_K; R; k
  i -> SYNTHETIC_8_shuffle2_SHUFFLE_i; R; k
  I -> SYNTHETIC_8_shuffle2_SHUFFLE_I; R; k
  $ -> SYNTHETIC_8_shuffle2_SHUFFLE_$; R; k
  [ -> SYNTHETIC_8_shuffle2_SHUFFLE_[; R; k
  * -> SYNTHETIC_8_shuffle2; R; k
  ! -> SYNTHETIC_8_shuffle2_SHUFFLE_!; R; k
  { -> SYNTHETIC_8_shuffle2_SHUFFLE_{; R; k
SYNTHETIC_8_shuffle2_SHUFFLE_K:
  _ -> START; L; K
  ` -> SYNTHETIC_8_shuffle2_SHUFFLE_`; R; K
  ^ -> SYNTHETIC_8_shuffle2_SHUFFLE_^; R; K
  s -> SYNTHETIC_8_shuffle2_SHUFFLE_s; R; K
  S -> SYNTHETIC_8_shuffle2_SHUFFLE_S; R; K
  k -> SYNTHETIC_8_shuffle2_SHUFFLE_k; R; K
  K -> SYNTHETIC_8_shuffle2_SHUFFLE_K; R; K
  i -> SYNTHETIC_8_shuffle2_SHUFFLE_i; R; K
  I -> SYNTHETIC_8_shuffle2_SHUFFLE_I; R; K
  $ -> SYNTHETIC_8_shuffle2_SHUFFLE_$; R; K
  [ -> SYNTHETIC_8_shuffle2_SHUFFLE_[; R; K
  * -> SYNTHETIC_8_shuffle2; R; K
  ! -> SYNTHETIC_8_shuffle2_SHUFFLE_!; R; K
  { -> SYNTHETIC_8_shuffle2_SHUFFLE_{; R; K
SYNTHETIC_8_shuffle2_SHUFFLE_i:
  _ -> START; L; i
  ` -> SYNTHETIC_8_shuffle2_SHUFFLE_`; R; i
  ^ -> SYNTHETIC_8_shuffle2_SHUFFLE_^; R; i
  s -> SYNTHETIC_8_shuffle2_SHUFFLE_s; R; i
  S -> SYNTHETIC_8_shuffle2_SHUFFLE_S; R; i
  k -> SYNTHETIC_8_shuffle2_SHUFFLE_k; R; i
  K -> SYNTHETIC_8_shuffle2_SHUFFLE_K; R; i
  i -> SYNTHETIC_8_shuffle2_SHUFFLE_i; R; i
  I -> SYNTHETIC_8_shuffle2_SHUFFLE_I; R; i
  $ -> SYNTHETIC_8_shuffle2_SHUFFLE_$; R; i
  [ -> SYNTHETIC_8_shuffle2_SHUFFLE_[; R; i
  * -> SYNTHETIC_8_shuffle2; R; i
  ! -> SYNTHETIC_8_shuffle2_SHUFFLE_!; R; i
  { -> SYNTHETIC_8_shuffle2_SHUFFLE_{; R; i
SYNTHETIC_8_shuffle2_SHUFFLE_I:
  _ -> START; L; I
  ` -> SYNTHETIC_8_shuffle2_SHUFFLE_`; R; I
  ^ -> SYNTHETIC_8_shuffle2_SHUFFLE_^; R; I
  s -> SYNTHETIC_8_shuffle2_SHUFFLE_s; R; I
  S -> SYNTHETIC_8_shuffle2_SHUFFLE_S; R; I
  k -> SYNTHETIC_8_shuffle2_SHUFFLE_k; R; I
  K -> SYNTHETIC_8_shuffle2_SHUFFLE_K; R; I
  i -> SYNTHETIC_8_shuffle2_SHUFFLE_i; R; I
  I -> SYNTHETIC_8_shuffle2_SHUFFLE_I; R; I
  $ -> SYNTHETIC_8_shuffle2_SHUFFLE_$; R; I
  [ -> SYNTHETIC_8_shuffle2_SHUFFLE_[; R; I
  * -> SYNTHETIC_8_shuffle2; R; I
  ! -> SYNTHETIC_8_shuffle2_SHUFFLE_!; R; I
  { -> SYNTHETIC_8_shuffle2_SHUFFLE_{; R; I
SYNTHETIC_8_shuffle2_SHUFFLE_$:
  _ -> START; L; $
  ` -> SYNTHETIC_8_shuffle2_SHUFFLE_`; R; $
  ^ -> SYNTHETIC_8_shuffle2_SHUFFLE_^; R; $
  s -> SYNTHETIC_8_shuffle2_SHUFFLE_s; R; $
  S -> SYNTHETIC_8_shuffle2_SHUFFLE_S; R; $
  k -> SYNTHETIC_8_shuffle2_SHUFFLE_k; R; $
  K -> SYNTHETIC_8_shuffle2_SHUFFLE_K; R; $
  i -> SYNTHETIC_8_shuffle2_SHUFFLE_i; R; $
  I -> SYNTHETIC_8_shuffle2_SHUFFLE_I; R; $
  $ -> SYNTHETIC_8_shuffle2_SHUFFLE_$; R; $
  [ -> SYNTHETIC_8_shuffle2_SHUFFLE_[; R; $
  * -> SYNTHETIC_8_shuffle2; R; $
  ! -> SYNTHETIC_8_shuffle2_SHUFFLE_!; R; $
  { -> SYNTHETIC_8_shuffle2_SHUFFLE_{; R; $
SYNTHETIC_8_shuffle2_SHUFFLE_[:
  _ -> START; L; [
  ` -> SYNTHETIC_8_shuffle2_SHUFFLE_`; R; [
  ^ -> SYNTHETIC_8_shuffle2_SHUFFLE_^; R; [
  s -> SYNTHETIC_8_shuffle2_SHUFFLE_s; R; [
  S -> SYNTHETIC_8_shuffle2_SHUFFLE_S; R; [
  k -> SYNTHETIC_8_shuffle2_SHUFFLE_k; R; [
  K -> SYNTHETIC_8_shuffle2_SHUFFLE_K; R; [
  i -> SYNTHETIC_8_shuffle2_SHUFFLE_i; R; [
  I -> SYNTHETIC_8_shuffle2_SHUFFLE_I; R; [
  $ -> SYNTHETIC_8_shuffle2_SHUFFLE_$; R; [
  [ -> SYNTHETIC_8_shuffle2_SHUFFLE_[; R; [
  * -> SYNTHETIC_8_shuffle2; R; [
  ! -> SYNTHETIC_8_shuffle2_SHUFFLE_!; R; [
  { -> SYNTHETIC_8_shuffle2_SHUFFLE_{; R; [
SYNTHETIC_8_shuffle2:
  _ -> START; L; *
  ` -> SYNTHETIC_8_shuffle2_SHUFFLE_`; R; *
  ^ -> SYNTHETIC_8_shuffle2_SHUFFLE_^; R; *
  s -> SYNTHETIC_8_shuffle2_SHUFFLE_s; R; *
  S -> SYNTHETIC_8_shuffle2_SHUFFLE_S; R; *
  k -> SYNTHETIC_8_shuffle2_SHUFFLE_k; R; *
  K -> SYNTHETIC_8_shuffle2_SHUFFLE_K; R; *
  i -> SYNTHETIC_8_shuffle2_SHUFFLE_i; R; *
  I -> SYNTHETIC_8_shuffle2_SHUFFLE_I; R; *
  $ -> SYNTHETIC_8_shuffle2_SHUFFLE_$; R; *
  [ -> SYNTHETIC_8_shuffle2_SHUFFLE_[; R; *
  * -> SYNTHETIC_8_shuffle2; R; *
  ! -> SYNTHETIC_8_shuffle2_SHUFFLE_!; R; *
  { -> SYNTHETIC_8_shuffle2_SHUFFLE_{; R; *
SYNTHETIC_8_shuffle2_SHUFFLE_!:
  _ -> START; L; !
  ` -> SYNTHETIC_8_shuffle2_SHUFFLE_`; R; !
  ^ -> SYNTHETIC_8_shuffle2_SHUFFLE_^; R; !
  s -> SYNTHETIC_8_shuffle2_SHUFFLE_s; R; !
  S -> SYNTHETIC_8_shuffle2_SHUFFLE_S; R; !
  k -> SYNTHETIC_8_shuffle2_SHUFFLE_k; R; !
  K -> SYNTHETIC_8_shuffle2_SHUFFLE_K; R; !
  i -> SYNTHETIC_8_shuffle2_SHUFFLE_i; R; !
  I -> SYNTHETIC_8_shuffle2_SHUFFLE_I; R; !
  $ -> SYNTHETIC_8_shuffle2_SHUFFLE_$; R; !
  [ -> SYNTHETIC_8_shuffle2_SHUFFLE_[; R; !
  * -> SYNTHETIC_8_shuffle2; R; !
  ! -> SYNTHETIC_8_shuffle2_SHUFFLE_!; R; !
  { -> SYNTHETIC_8_shuffle2_SHUFFLE_{; R; !
SYNTHETIC_8_shuffle2_SHUFFLE_{:
  _ -> START; L; {
  ` -> SYNTHETIC_8_shuffle2_SHUFFLE_`; R; {
  ^ -> SYNTHETIC_8_shuffle2_SHUFFLE_^; R; {
  s -> SYNTHETIC_8_shuffle2_SHUFFLE_s; R; {
  S -> SYNTHETIC_8_shuffle2_SHUFFLE_S; R; {
  k -> SYNTHETIC_8_shuffle2_SHUFFLE_k; R; {
  K -> SYNTHETIC_8_shuffle2_SHUFFLE_K; R; {
  i -> SYNTHETIC_8_shuffle2_SHUFFLE_i; R; {
  I -> SYNTHETIC_8_shuffle2_SHUFFLE_I; R; {
  $ -> SYNTHETIC_8_shuffle2_SHUFFLE_$; R; {
  [ -> SYNTHETIC_8_shuffle2_SHUFFLE_[; R; {
  * -> SYNTHETIC_8_shuffle2; R; {
  ! -> SYNTHETIC_8_shuffle2_SHUFFLE_!; R; {
  { -> SYNTHETIC_8_shuffle2_SHUFFLE_{; R; {
SYNTHETIC_9_step:
  _ -> SYNTHETIC_8_shuffle2; L; _
  ` -> SYNTHETIC_8_shuffle2; L; `
  ^ -> SYNTHETIC_8_shuffle2; L; ^
  s -> SYNTHETIC_8_shuffle2; L; s
  S -> SYNTHETIC_8_shuffle2; L; S
  k -> SYNTHETIC_8_shuffle2; L; k
  K -> SYNTHETIC_8_shuffle2; L; K
  i -> SYNTHETIC_8_shuffle2; L; i
  I -> SYNTHETIC_8_shuffle2; L; I
  $ -> SYNTHETIC_8_shuffle2; L; $
  [ -> SYNTHETIC_8_shuffle2; L; [
  * -> SYNTHETIC_8_shuffle2; L; *
  ! -> SYNTHETIC_8_shuffle2; L; !
  { -> SYNTHETIC_8_shuffle2; L; {
SYNTHETIC_10_shuffle2_SHUFFLE__:
  _ -> START; L; _
  ` -> SYNTHETIC_10_shuffle2_SHUFFLE_`; R; _
  ^ -> SYNTHETIC_10_shuffle2_SHUFFLE_^; R; _
  s -> SYNTHETIC_10_shuffle2_SHUFFLE_s; R; _
  S -> SYNTHETIC_10_shuffle2_SHUFFLE_S; R; _
  k -> SYNTHETIC_10_shuffle2_SHUFFLE_k; R; _
  K -> SYNTHETIC_10_shuffle2_SHUFFLE_K; R; _
  i -> SYNTHETIC_10_shuffle2_SHUFFLE_i; R; _
  I -> SYNTHETIC_10_shuffle2_SHUFFLE_I; R; _
  $ -> SYNTHETIC_10_shuffle2_SHUFFLE_$; R; _
  [ -> SYNTHETIC_10_shuffle2_SHUFFLE_[; R; _
  * -> SYNTHETIC_10_shuffle2; R; _
  ! -> SYNTHETIC_10_shuffle2_SHUFFLE_!; R; _
  { -> SYNTHETIC_10_shuffle2_SHUFFLE_{; R; _
SYNTHETIC_10_shuffle2_SHUFFLE_`:
  _ -> START; L; `
  ` -> SYNTHETIC_10_shuffle2_SHUFFLE_`; R; `
  ^ -> SYNTHETIC_10_shuffle2_SHUFFLE_^; R; `
  s -> SYNTHETIC_10_shuffle2_SHUFFLE_s; R; `
  S -> SYNTHETIC_10_shuffle2_SHUFFLE_S; R; `
  k -> SYNTHETIC_10_shuffle2_SHUFFLE_k; R; `
  K -> SYNTHETIC_10_shuffle2_SHUFFLE_K; R; `
  i -> SYNTHETIC_10_shuffle2_SHUFFLE_i; R; `
  I -> SYNTHETIC_10_shuffle2_SHUFFLE_I; R; `
  $ -> SYNTHETIC_10_shuffle2_SHUFFLE_$; R; `
  [ -> SYNTHETIC_10_shuffle2_SHUFFLE_[; R; `
  * -> SYNTHETIC_10_shuffle2; R; `
  ! -> SYNTHETIC_10_shuffle2_SHUFFLE_!; R; `
  { -> SYNTHETIC_10_shuffle2_SHUFFLE_{; R; `
SYNTHETIC_10_shuffle2_SHUFFLE_^:
  _ -> START; L; ^
  ` -> SYNTHETIC_10_shuffle2_SHUFFLE_`; R; ^
  ^ -> SYNTHETIC_10_shuffle2_SHUFFLE_^; R; ^
  s -> SYNTHETIC_10_shuffle2_SHUFFLE_s; R; ^
  S -> SYNTHETIC_10_shuffle2_SHUFFLE_S; R; ^
  k -> SYNTHETIC_10_shuffle2_SHUFFLE_k; R; ^
  K -> SYNTHETIC_10_shuffle2_SHUFFLE_K; R; ^
  i -> SYNTHETIC_10_shuffle2_SHUFFLE_i; R; ^
  I -> SYNTHETIC_10_shuffle2_SHUFFLE_I; R; ^
  $ -> SYNTHETIC_10_shuffle2_SHUFFLE_$; R; ^
  [ -> SYNTHETIC_10_shuffle2_SHUFFLE_[; R; ^
  * -> SYNTHETIC_10_shuffle2; R; ^
  ! -> SYNTHETIC_10_shuffle2_SHUFFLE_!; R; ^
  { -> SYNTHETIC_10_shuffle2_SHUFFLE_{; R; ^
SYNTHETIC_10_shuffle2_SHUFFLE_s:
  _ -> START; L; s
  ` -> SYNTHETIC_10_shuffle2_SHUFFLE_`; R; s
  ^ -> SYNTHETIC_10_shuffle2_SHUFFLE_^; R; s
  s -> SYNTHETIC_10_shuffle2_SHUFFLE_s; R; s
  S -> SYNTHETIC_10_shuffle2_SHUFFLE_S; R; s
  k -> SYNTHETIC_10_shuffle2_SHUFFLE_k; R; s
  K -> SYNTHETIC_10_shuffle2_SHUFFLE_K; R; s
  i -> SYNTHETIC_10_shuffle2_SHUFFLE_i; R; s
  I -> SYNTHETIC_10_shuffle2_SHUFFLE_I; R; s
  $ -> SYNTHETIC_10_shuffle2_SHUFFLE_$; R; s
  [ -> SYNTHETIC_10_shuffle2_SHUFFLE_[; R; s
  * -> SYNTHETIC_10_shuffle2; R; s
  ! -> SYNTHETIC_10_shuffle2_SHUFFLE_!; R; s
  { -> SYNTHETIC_10_shuffle2_SHUFFLE_{; R; s
SYNTHETIC_10_shuffle2_SHUFFLE_S:
  _ -> START; L; S
  ` -> SYNTHETIC_10_shuffle2_SHUFFLE_`; R; S
  ^ -> SYNTHETIC_10_shuffle2_SHUFFLE_^; R; S
  s -> SYNTHETIC_10_shuffle2_SHUFFLE_s; R; S
  S -> SYNTHETIC_10_shuffle2_SHUFFLE_S; R; S
  k -> SYNTHETIC_10_shuffle2_SHUFFLE_k; R; S
  K -> SYNTHETIC_10_shuffle2_SHUFFLE_K; R; S
  i -> SYNTHETIC_10_shuffle2_SHUFFLE_i; R; S
  I -> SYNTHETIC_10_shuffle2_SHUFFLE_I; R; S
  $ -> SYNTHETIC_10_shuffle2_SHUFFLE_$; R; S
  [ -> SYNTHETIC_10_shuffle2_SHUFFLE_[; R; S
  * -> SYNTHETIC_10_shuffle2; R; S
  ! -> SYNTHETIC_10_shuffle2_SHUFFLE_!; R; S
  { -> SYNTHETIC_10_shuffle2_SHUFFLE_{; R; S
SYNTHETIC_10_shuffle2_SHUFFLE_k:
  _ -> START; L; k
  ` -> SYNTHETIC_10_shuffle2_SHUFFLE_`; R; k
  ^ -> SYNTHETIC_10_shuffle2_SHUFFLE_^; R; k
  s -> SYNTHETIC_10_shuffle2_SHUFFLE_s; R; k
  S -> SYNTHETIC_10_shuffle2_SHUFFLE_S; R; k
  k -> SYNTHETIC_10_shuffle2_SHUFFLE_k; R; k
  K -> SYNTHETIC_10_shuffle2_SHUFFLE_K; R; k
  i -> SYNTHETIC_10_shuffle2_SHUFFLE_i; R; k
  I -> SYNTHETIC_10_shuffle2_SHUFFLE_I; R; k
  $ -> SYNTHETIC_10_shuffle2_SHUFFLE_$; R; k
  [ -> SYNTHETIC_10_shuffle2_SHUFFLE_[; R; k
  * -> SYNTHETIC_10_shuffle2; R; k
  ! -> SYNTHETIC_10_shuffle2_SHUFFLE_!; R; k
  { -> SYNTHETIC_10_shuffle2_SHUFFLE_{; R; k
SYNTHETIC_10_shuffle2_SHUFFLE_K:
  _ -> START; L; K
  ` -> SYNTHETIC_10_shuffle2_SHUFFLE_`; R; K
  ^ -> SYNTHETIC_10_shuffle2_SHUFFLE_^; R; K
  s -> SYNTHETIC_10_shuffle2_SHUFFLE_s; R; K
  S -> SYNTHETIC_10_shuffle2_SHUFFLE_S; R; K
  k -> SYNTHETIC_10_shuffle2_SHUFFLE_k; R; K
  K -> SYNTHETIC_10_shuffle2_SHUFFLE_K; R; K
  i -> SYNTHETIC_10_shuffle2_SHUFFLE_i; R; K
  I -> SYNTHETIC_10_shuffle2_SHUFFLE_I; R; K
  $ -> SYNTHETIC_10_shuffle2_SHUFFLE_$; R; K
  [ -> SYNTHETIC_10_shuffle2_SHUFFLE_[; R; K
  * -> SYNTHETIC_10_shuffle2; R; K
  ! -> SYNTHETIC_10_shuffle2_SHUFFLE_!; R; K
  { -> SYNTHETIC_10_shuffle2_SHUFFLE_{; R; K
SYNTHETIC_10_shuffle2_SHUFFLE_i:
  _ -> START; L; i
  ` -> SYNTHETIC_10_shuffle2_SHUFFLE_`; R; i
  ^ -> SYNTHETIC_10_shuffle2_SHUFFLE_^; R; i
  s -> SYNTHETIC_10_shuffle2_SHUFFLE_s; R; i
  S -> SYNTHETIC_10_shuffle2_SHUFFLE_S; R; i
  k -> SYNTHETIC_10_shuffle2_SHUFFLE_k; R; i
  K -> SYNTHETIC_10_shuffle2_SHUFFLE_K; R; i
  i -> SYNTHETIC_10_shuffle2_SHUFFLE_i; R; i
  I -> SYNTHETIC_10_shuffle2_SHUFFLE_I; R; i
  $ -> SYNTHETIC_10_shuffle2_SHUFFLE_$; R; i
  [ -> SYNTHETIC_10_shuffle2_SHUFFLE_[; R; i
  * -> SYNTHETIC_10_shuffle2; R; i
  ! -> SYNTHETIC_10_shuffle2_SHUFFLE_!; R; i
  { -> SYNTHETIC_10_shuffle2_SHUFFLE_{; R; i
SYNTHETIC_10_shuffle2_SHUFFLE_I:
  _ -> START; L; I
  ` -> SYNTHETIC_10_shuffle2_SHUFFLE_`; R; I
  ^ -> SYNTHETIC_10_shuffle2_SHUFFLE_^; R; I
  s -> SYNTHETIC_10_shuffle2_SHUFFLE_s; R; I
  S -> SYNTHETIC_10_shuffle2_SHUFFLE_S; R; I
  k -> SYNTHETIC_10_shuffle2_SHUFFLE_k; R; I
  K -> SYNTHETIC_10_shuffle2_SHUFFLE_K; R; I
  i -> SYNTHETIC_10_shuffle2_SHUFFLE_i; R; I
  I -> SYNTHETIC_10_shuffle2_SHUFFLE_I; R; I
  $ -> SYNTHETIC_10_shuffle2_SHUFFLE_$; R; I
  [ -> SYNTHETIC_10_shuffle2_SHUFFLE_[; R; I
  * -> SYNTHETIC_10_shuffle2; R; I
  ! -> SYNTHETIC_10_shuffle2_SHUFFLE_!; R; I
  { -> SYNTHETIC_10_shuffle2_SHUFFLE_{; R; I
SYNTHETIC_10_shuffle2_SHUFFLE_$:
  _ -> START; L; $
  ` -> SYNTHETIC_10_shuffle2_SHUFFLE_`; R; $
  ^ -> SYNTHETIC_10_shuffle2_SHUFFLE_^; R; $
  s -> SYNTHETIC_10_shuffle2_SHUFFLE_s; R; $
  S -> SYNTHETIC_10_shuffle2_SHUFFLE_S; R; $
  k -> SYNTHETIC_10_shuffle2_SHUFFLE_k; R; $
  K -> SYNTHETIC_10_shuffle2_SHUFFLE_K; R; $
  i -> SYNTHETIC_10_shuffle2_SHUFFLE_i; R; $
  I -> SYNTHETIC_10_shuffle2_SHUFFLE_I; R; $
  $ -> SYNTHETIC_10_shuffle2_SHUFFLE_$; R; $
  [ -> SYNTHETIC_10_shuffle2_SHUFFLE_[; R; $
  * -> SYNTHETIC_10_shuffle2; R; $
  ! -> SYNTHETIC_10_shuffle2_SHUFFLE_!; R; $
  { -> SYNTHETIC_10_shuffle2_SHUFFLE_{; R; $
SYNTHETIC_10_shuffle2_SHUFFLE_[:
  _ -> START; L; [
  ` -> SYNTHETIC_10_shuffle2_SHUFFLE_`; R; [
  ^ -> SYNTHETIC_10_shuffle2_SHUFFLE_^; R; [
  s -> SYNTHETIC_10_shuffle2_SHUFFLE_s; R; [
  S -> SYNTHETIC_10_shuffle2_SHUFFLE_S; R; [
  k -> SYNTHETIC_10_shuffle2_SHUFFLE_k; R; [
  K -> SYNTHETIC_10_shuffle2_SHUFFLE_K; R; [
  i -> SYNTHETIC_10_shuffle2_SHUFFLE_i; R; [
  I -> SYNTHETIC_10_shuffle2_SHUFFLE_I; R; [
  $ -> SYNTHETIC_10_shuffle2_SHUFFLE_$; R; [
  [ -> SYNTHETIC_10_shuffle2_SHUFFLE_[; R; [
  * -> SYNTHETIC_10_shuffle2; R; [
  ! -> SYNTHETIC_10_shuffle2_SHUFFLE_!; R; [
  { -> SYNTHETIC_10_shuffle2_SHUFFLE_{; R; [
SYNTHETIC_10_shuffle2:
  _ -> START; L; *
  ` -> SYNTHETIC_10_shuffle2_SHUFFLE_`; R; *
  ^ -> SYNTHETIC_10_shuffle2_SHUFFLE_^; R; *
  s -> SYNTHETIC_10_shuffle2_SHUFFLE_s; R; *
  S -> SYNTHETIC_10_shuffle2_SHUFFLE_S; R; *
  k -> SYNTHETIC_10_shuffle2_SHUFFLE_k; R; *
  K -> SYNTHETIC_10_shuffle2_SHUFFLE_K; R; *
  i -> SYNTHETIC_10_shuffle2_SHUFFLE_i; R; *
  I -> SYNTHETIC_10_shuffle2_SHUFFLE_I; R; *
  $ -> SYNTHETIC_10_shuffle2_SHUFFLE_$; R; *
  [ -> SYNTHETIC_10_shuffle2_SHUFFLE_[; R; *
  * -> SYNTHETIC_10_shuffle2; R; *
  ! -> SYNTHETIC_10_shuffle2_SHUFFLE_!; R; *
  { -> SYNTHETIC_10_shuffle2_SHUFFLE_{; R; *
SYNTHETIC_10_shuffle2_SHUFFLE_!:
  _ -> START; L; !
  ` -> SYNTHETIC_10_shuffle2_SHUFFLE_`; R; !
  ^ -> SYNTHETIC_10_shuffle2_SHUFFLE_^; R; !
  s -> SYNTHETIC_10_shuffle2_SHUFFLE_s; R; !
  S -> SYNTHETIC_10_shuffle2_SHUFFLE_S; R; !
  k -> SYNTHETIC_10_shuffle2_SHUFFLE_k; R; !
  K -> SYNTHETIC_10_shuffle2_SHUFFLE_K; R; !
  i -> SYNTHETIC_10_shuffle2_SHUFFLE_i; R; !
  I -> SYNTHETIC_10_shuffle2_SHUFFLE_I; R; !
  $ -> SYNTHETIC_10_shuffle2_SHUFFLE_$; R; !
  [ -> SYNTHETIC_10_shuffle2_SHUFFLE_[; R; !
  * -> SYNTHETIC_10_shuffle2; R; !
  ! -> SYNTHETIC_10_shuffle2_SHUFFLE_!; R; !
  { -> SYNTHETIC_10_shuffle2_SHUFFLE_{; R; !
SYNTHETIC_10_shuffle2_SHUFFLE_{:
  _ -> START; L; {
  ` -> SYNTHETIC_10_shuffle2_SHUFFLE_`; R; {
  ^ -> SYNTHETIC_10_shuffle2_SHUFFLE_^; R; {
  s -> SYNTHETIC_10_shuffle2_SHUFFLE_s; R; {
  S -> SYNTHETIC_10_shuffle2_SHUFFLE_S; R; {
  k -> SYNTHETIC_10_shuffle2_SHUFFLE_k; R; {
  K -> SYNTHETIC_10_shuffle2_SHUFFLE_K; R; {
  i -> SYNTHETIC_10_shuffle2_SHUFFLE_i; R; {
  I -> SYNTHETIC_10_shuffle2_SHUFFLE_I; R; {
  $ -> SYNTHETIC_10_shuffle2_SHUFFLE_$; R; {
  [ -> SYNTHETIC_10_shuffle2_SHUFFLE_[; R; {
  * -> SYNTHETIC_10_shuffle2; R; {
  ! -> SYNTHETIC_10_shuffle2_SHUFFLE_!; R; {
  { -> SYNTHETIC_10_shuffle2_SHUFFLE_{; R; {
SYNTHETIC_11_step:
  _ -> SYNTHETIC_10_shuffle2; L; _
  ` -> SYNTHETIC_10_shuffle2; L; `
  ^ -> SYNTHETIC_10_shuffle2; L; ^
  s -> SYNTHETIC_10_shuffle2; L; s
  S -> SYNTHETIC_10_shuffle2; L; S
  k -> SYNTHETIC_10_shuffle2; L; k
  K -> SYNTHETIC_10_shuffle2; L; K
  i -> SYNTHETIC_10_shuffle2; L; i
  I -> SYNTHETIC_10_shuffle2; L; I
  $ -> SYNTHETIC_10_shuffle2; L; $
  [ -> SYNTHETIC_10_shuffle2; L; [
  * -> SYNTHETIC_10_shuffle2; L; *
  ! -> SYNTHETIC_10_shuffle2; L; !
  { -> SYNTHETIC_10_shuffle2; L; {
SYNTHETIC_12_shuffle2_SHUFFLE__:
  _ -> START; L; _
  ` -> SYNTHETIC_12_shuffle2_SHUFFLE_`; R; _
  ^ -> SYNTHETIC_12_shuffle2_SHUFFLE_^; R; _
  s -> SYNTHETIC_12_shuffle2_SHUFFLE_s; R; _
  S -> SYNTHETIC_12_shuffle2_SHUFFLE_S; R; _
  k -> SYNTHETIC_12_shuffle2_SHUFFLE_k; R; _
  K -> SYNTHETIC_12_shuffle2_SHUFFLE_K; R; _
  i -> SYNTHETIC_12_shuffle2_SHUFFLE_i; R; _
  I -> SYNTHETIC_12_shuffle2_SHUFFLE_I; R; _
  $ -> SYNTHETIC_12_shuffle2_SHUFFLE_$; R; _
  [ -> SYNTHETIC_12_shuffle2_SHUFFLE_[; R; _
  * -> SYNTHETIC_12_shuffle2; R; _
  ! -> SYNTHETIC_12_shuffle2_SHUFFLE_!; R; _
  { -> SYNTHETIC_12_shuffle2_SHUFFLE_{; R; _
SYNTHETIC_12_shuffle2_SHUFFLE_`:
  _ -> START; L; `
  ` -> SYNTHETIC_12_shuffle2_SHUFFLE_`; R; `
  ^ -> SYNTHETIC_12_shuffle2_SHUFFLE_^; R; `
  s -> SYNTHETIC_12_shuffle2_SHUFFLE_s; R; `
  S -> SYNTHETIC_12_shuffle2_SHUFFLE_S; R; `
  k -> SYNTHETIC_12_shuffle2_SHUFFLE_k; R; `
  K -> SYNTHETIC_12_shuffle2_SHUFFLE_K; R; `
  i -> SYNTHETIC_12_shuffle2_SHUFFLE_i; R; `
  I -> SYNTHETIC_12_shuffle2_SHUFFLE_I; R; `
  $ -> SYNTHETIC_12_shuffle2_SHUFFLE_$; R; `
  [ -> SYNTHETIC_12_shuffle2_SHUFFLE_[; R; `
  * -> SYNTHETIC_12_shuffle2; R; `
  ! -> SYNTHETIC_12_shuffle2_SHUFFLE_!; R; `
  { -> SYNTHETIC_12_shuffle2_SHUFFLE_{; R; `
SYNTHETIC_12_shuffle2_SHUFFLE_^:
  _ -> START; L; ^
  ` -> SYNTHETIC_12_shuffle2_SHUFFLE_`; R; ^
  ^ -> SYNTHETIC_12_shuffle2_SHUFFLE_^; R; ^
  s -> SYNTHETIC_12_shuffle2_SHUFFLE_s; R; ^
  S -> SYNTHETIC_12_shuffle2_SHUFFLE_S; R; ^
  k -> SYNTHETIC_12_shuffle2_SHUFFLE_k; R; ^
  K -> SYNTHETIC_12_shuffle2_SHUFFLE_K; R; ^
  i -> SYNTHETIC_12_shuffle2_SHUFFLE_i; R; ^
  I -> SYNTHETIC_12_shuffle2_SHUFFLE_I; R; ^
  $ -> SYNTHETIC_12_shuffle2_SHUFFLE_$; R; ^
  [ -> SYNTHETIC_12_shuffle2_SHUFFLE_[; R; ^
  * -> SYNTHETIC_12_shuffle2; R; ^
  ! -> SYNTHETIC_12_shuffle2_SHUFFLE_!; R; ^
  { -> SYNTHETIC_12_shuffle2_SHUFFLE_{; R; ^
SYNTHETIC_12_shuffle2_SHUFFLE_s:
  _ -> START; L; s
  ` -> SYNTHETIC_12_shuffle2_SHUFFLE_`; R; s
  ^ -> SYNTHETIC_12_shuffle2_SHUFFLE_^; R; s
  s -> SYNTHETIC_12_shuffle2_SHUFFLE_s; R; s
  S -> SYNTHETIC_12_shuffle2_SHUFFLE_S; R; s
  k -> SYNTHETIC_12_shuffle2_SHUFFLE_k; R; s
  K -> SYNTHETIC_12_shuffle2_SHUFFLE_K; R; s
  i -> SYNTHETIC_12_shuffle2_SHUFFLE_i; R; s
  I -> SYNTHETIC_12_shuffle2_SHUFFLE_I; R; s
  $ -> SYNTHETIC_12_shuffle2_SHUFFLE_$; R; s
  [ -> SYNTHETIC_12_shuffle2_SHUFFLE_[; R; s
  * -> SYNTHETIC_12_shuffle2; R; s
  ! -> SYNTHETIC_12_shuffle2_SHUFFLE_!; R; s
  { -> SYNTHETIC_12_shuffle2_SHUFFLE_{; R; s
SYNTHETIC_12_shuffle2_SHUFFLE_S:
  _ -> START; L; S
  ` -> SYNTHETIC_12_shuffle2_SHUFFLE_`; R; S
  ^ -> SYNTHETIC_12_shuffle2_SHUFFLE_^; R; S
  s -> SYNTHETIC_12_shuffle2_SHUFFLE_s; R; S
  S -> SYNTHETIC_12_shuffle2_SHUFFLE_S; R; S
  k -> SYNTHETIC_12_shuffle2_SHUFFLE_k; R; S
  K -> SYNTHETIC_12_shuffle2_SHUFFLE_K; R; S
  i -> SYNTHETIC_12_shuffle2_SHUFFLE_i; R; S
  I -> SYNTHETIC_12_shuffle2_SHUFFLE_I; R; S
  $ -> SYNTHETIC_12_shuffle2_SHUFFLE_$; R; S
  [ -> SYNTHETIC_12_shuffle2_SHUFFLE_[; R; S
  * -> SYNTHETIC_12_shuffle2; R; S
  ! -> SYNTHETIC_12_shuffle2_SHUFFLE_!; R; S
  { -> SYNTHETIC_12_shuffle2_SHUFFLE_{; R; S
SYNTHETIC_12_shuffle2_SHUFFLE_k:
  _ -> START; L; k
  ` -> SYNTHETIC_12_shuffle2_SHUFFLE_`; R; k
  ^ -> SYNTHETIC_12_shuffle2_SHUFFLE_^; R; k
  s -> SYNTHETIC_12_shuffle2_SHUFFLE_s; R; k
  S -> SYNTHETIC_12_shuffle2_SHUFFLE_S; R; k
  k -> SYNTHETIC_12_shuffle2_SHUFFLE_k; R; k
  K -> SYNTHETIC_12_shuffle2_SHUFFLE_K; R; k
  i -> SYNTHETIC_12_shuffle2_SHUFFLE_i; R; k
  I -> SYNTHETIC_12_shuffle2_SHUFFLE_I; R; k
  $ -> SYNTHETIC_12_shuffle2_SHUFFLE_$; R; k
  [ -> SYNTHETIC_12_shuffle2_SHUFFLE_[; R; k
  * -> SYNTHETIC_12_shuffle2; R; k
  ! -> SYNTHETIC_12_shuffle2_SHUFFLE_!; R; k
  { -> SYNTHETIC_12_shuffle2_SHUFFLE_{; R; k
SYNTHETIC_12_shuffle2_SHUFFLE_K:
  _ -> START; L; K
  ` -> SYNTHETIC_12_shuffle2_SHUFFLE_`; R; K
  ^ -> SYNTHETIC_12_shuffle2_SHUFFLE_^; R; K
  s -> SYNTHETIC_12_shuffle2_SHUFFLE_s; R; K
  S -> SYNTHETIC_12_shuffle2_SHUFFLE_S; R; K
  k -> SYNTHETIC_12_shuffle2_SHUFFLE_k; R; K
  K -> SYNTHETIC_12_shuffle2_SHUFFLE_K; R; K
  i -> SYNTHETIC_12_shuffle2_SHUFFLE_i; R; K
  I -> SYNTHETIC_12_shuffle2_SHUFFLE_I; R; K
  $ -> SYNTHETIC_12_shuffle2_SHUFFLE_$; R; K
  [ -> SYNTHETIC_12_shuffle2_SHUFFLE_[; R; K
  * -> SYNTHETIC_12_shuffle2; R; K
  ! -> SYNTHETIC_12_shuffle2_SHUFFLE_!; R; K
  { -> SYNTHETIC_12_shuffle2_SHUFFLE_{; R; K
SYNTHETIC_12_shuffle2_SHUFFLE_i:
  _ -> START; L; i
  ` -> SYNTHETIC_12_shuffle2_SHUFFLE_`; R; i
  ^ -> SYNTHETIC_12_shuffle2_SHUFFLE_^; R; i
  s -> SYNTHETIC_12_shuffle2_SHUFFLE_s; R; i
  S -> SYNTHETIC_12_shuffle2_SHUFFLE_S; R; i
  k -> SYNTHETIC_12_shuffle2_SHUFFLE_k; R; i
  K -> SYNTHETIC_12_shuffle2_SHUFFLE_K; R; i
  i -> SYNTHETIC_12_shuffle2_SHUFFLE_i; R; i
  I -> SYNTHETIC_12_shuffle2_SHUFFLE_I; R; i
  $ -> SYNTHETIC_12_shuffle2_SHUFFLE_$; R; i
  [ -> SYNTHETIC_12_shuffle2_SHUFFLE_[; R; i
  * -> SYNTHETIC_12_shuffle2; R; i
  ! -> SYNTHETIC_12_shuffle2_SHUFFLE_!; R; i
  { -> SYNTHETIC_12_shuffle2_SHUFFLE_{; R; i
SYNTHETIC_12_shuffle2_SHUFFLE_I:
  _ -> START; L; I
  ` -> SYNTHETIC_12_shuffle2_SHUFFLE_`; R; I
  ^ -> SYNTHETIC_12_shuffle2_SHUFFLE_^; R; I
  s -> SYNTHETIC_12_shuffle2_SHUFFLE_s; R; I
  S -> SYNTHETIC_12_shuffle2_SHUFFLE_S; R; I
  k -> SYNTHETIC_12_shuffle2_SHUFFLE_k; R; I
  K -> SYNTHETIC_12_shuffle2_SHUFFLE_K; R; I
  i -> SYNTHETIC_12_shuffle2_SHUFFLE_i; R; I
  I -> SYNTHETIC_12_shuffle2_SHUFFLE_I; R; I
  $ -> SYNTHETIC_12_shuffle2_SHUFFLE_$; R; I
  [ -> SYNTHETIC_12_shuffle2_SHUFFLE_[; R; I
  * -> SYNTHETIC_12_shuffle2; R; I
  ! -> SYNTHETIC_12_shuffle2_SHUFFLE_!; R; I
  { -> SYNTHETIC_12_shuffle2_SHUFFLE_{; R; I
SYNTHETIC_12_shuffle2_SHUFFLE_$:
  _ -> START; L; $
  ` -> SYNTHETIC_12_shuffle2_SHUFFLE_`; R; $
  ^ -> SYNTHETIC_12_shuffle2_SHUFFLE_^; R; $
  s -> SYNTHETIC_12_shuffle2_SHUFFLE_s; R; $
  S -> SYNTHETIC_12_shuffle2_SHUFFLE_S; R; $
  k -> SYNTHETIC_12_shuffle2_SHUFFLE_k; R; $
  K -> SYNTHETIC_12_shuffle2_SHUFFLE_K; R; $
  i -> SYNTHETIC_12_shuffle2_SHUFFLE_i; R; $
  I -> SYNTHETIC_12_shuffle2_SHUFFLE_I; R; $
  $ -> SYNTHETIC_12_shuffle2_SHUFFLE_$; R; $
  [ -> SYNTHETIC_12_shuffle2_SHUFFLE_[; R; $
  * -> SYNTHETIC_12_shuffle2; R; $
  ! -> SYNTHETIC_12_shuffle2_SHUFFLE_!; R; $
  { -> SYNTHETIC_12_shuffle2_SHUFFLE_{; R; $
SYNTHETIC_12_shuffle2_SHUFFLE_[:
  _ -> START; L; [
  ` -> SYNTHETIC_12_shuffle2_SHUFFLE_`; R; [
  ^ -> SYNTHETIC_12_shuffle2_SHUFFLE_^; R; [
  s -> SYNTHETIC_12_shuffle2_SHUFFLE_s; R; [
  S -> SYNTHETIC_12_shuffle2_SHUFFLE_S; R; [
  k -> SYNTHETIC_12_shuffle2_SHUFFLE_k; R; [
  K -> SYNTHETIC_12_shuffle2_SHUFFLE_K; R; [
  i -> SYNTHETIC_12_shuffle2_SHUFFLE_i; R; [
  I -> SYNTHETIC_12_shuffle2_SHUFFLE_I; R; [
  $ -> SYNTHETIC_12_shuffle2_SHUFFLE_$; R; [
  [ -> SYNTHETIC_12_shuffle2_SHUFFLE_[; R; [
  * -> SYNTHETIC_12_shuffle2; R; [
  ! -> SYNTHETIC_12_shuffle2_SHUFFLE_!; R; [
  { -> SYNTHETIC_12_shuffle2_SHUFFLE_{; R; [
SYNTHETIC_12_shuffle2:
  _ -> START; L; *
  ` -> SYNTHETIC_12_shuffle2_SHUFFLE_`; R; *
  ^ -> SYNTHETIC_12_shuffle2_SHUFFLE_^; R; *
  s -> SYNTHETIC_12_shuffle2_SHUFFLE_s; R; *
  S -> SYNTHETIC_12_shuffle2_SHUFFLE_S; R; *
  k -> SYNTHETIC_12_shuffle2_SHUFFLE_k; R; *
  K -> SYNTHETIC_12_shuffle2_SHUFFLE_K; R; *
  i -> SYNTHETIC_12_shuffle2_SHUFFLE_i; R; *
  I -> SYNTHETIC_12_shuffle2_SHUFFLE_I; R; *
  $ -> SYNTHETIC_12_shuffle2_SHUFFLE_$; R; *
  [ -> SYNTHETIC_12_shuffle2_SHUFFLE_[; R; *
  * -> SYNTHETIC_12_shuffle2; R; *
  ! -> SYNTHETIC_12_shuffle2_SHUFFLE_!; R; *
  { -> SYNTHETIC_12_shuffle2_SHUFFLE_{; R; *
SYNTHETIC_12_shuffle2_SHUFFLE_!:
  _ -> START; L; !
  ` -> SYNTHETIC_12_shuffle2_SHUFFLE_`; R; !
  ^ -> SYNTHETIC_12_shuffle2_SHUFFLE_^; R; !
  s -> SYNTHETIC_12_shuffle2_SHUFFLE_s; R; !
  S -> SYNTHETIC_12_shuffle2_SHUFFLE_S; R; !
  k -> SYNTHETIC_12_shuffle2_SHUFFLE_k; R; !
  K -> SYNTHETIC_12_shuffle2_SHUFFLE_K; R; !
  i -> SYNTHETIC_12_shuffle2_SHUFFLE_i; R; !
  I -> SYNTHETIC_12_shuffle2_SHUFFLE_I; R; !
  $ -> SYNTHETIC_12_shuffle2_SHUFFLE_$; R; !
  [ -> SYNTHETIC_12_shuffle2_SHUFFLE_[; R; !
  * -> SYNTHETIC_12_shuffle2; R; !
  ! -> SYNTHETIC_12_shuffle2_SHUFFLE_!; R; !
  { -> SYNTHETIC_12_shuffle2_SHUFFLE_{; R; !
SYNTHETIC_12_shuffle2_SHUFFLE_{:
  _ -> START; L; {
  ` -> SYNTHETIC_12_shuffle2_SHUFFLE_`; R; {
  ^ -> SYNTHETIC_12_shuffle2_SHUFFLE_^; R; {
  s -> SYNTHETIC_12_shuffle2_SHUFFLE_s; R; {
  S -> SYNTHETIC_12_shuffle2_SHUFFLE_S; R; {
  k -> SYNTHETIC_12_shuffle2_SHUFFLE_k; R; {
  K -> SYNTHETIC_12_shuffle2_SHUFFLE_K; R; {
  i -> SYNTHETIC_12_shuffle2_SHUFFLE_i; R; {
  I -> SYNTHETIC_12_shuffle2_SHUFFLE_I; R; {
  $ -> SYNTHETIC_12_shuffle2_SHUFFLE_$; R; {
  [ -> SYNTHETIC_12_shuffle2_SHUFFLE_[; R; {
  * -> SYNTHETIC_12_shuffle2; R; {
  ! -> SYNTHETIC_12_shuffle2_SHUFFLE_!; R; {
  { -> SYNTHETIC_12_shuffle2_SHUFFLE_{; R; {
SYNTHETIC_13_step:
  _ -> SYNTHETIC_12_shuffle2; L; _
  ` -> SYNTHETIC_12_shuffle2; L; `
  ^ -> SYNTHETIC_12_shuffle2; L; ^
  s -> SYNTHETIC_12_shuffle2; L; s
  S -> SYNTHETIC_12_shuffle2; L; S
  k -> SYNTHETIC_12_shuffle2; L; k
  K -> SYNTHETIC_12_shuffle2; L; K
  i -> SYNTHETIC_12_shuffle2; L; i
  I -> SYNTHETIC_12_shuffle2; L; I
  $ -> SYNTHETIC_12_shuffle2; L; $
  [ -> SYNTHETIC_12_shuffle2; L; [
  * -> SYNTHETIC_12_shuffle2; L; *
  ! -> SYNTHETIC_12_shuffle2; L; !
  { -> SYNTHETIC_12_shuffle2; L; {
SYNTHETIC_14_shuffle2_SHUFFLE__:
  _ -> START; L; _
  ` -> SYNTHETIC_14_shuffle2_SHUFFLE_`; R; _
  ^ -> SYNTHETIC_14_shuffle2_SHUFFLE_^; R; _
  s -> SYNTHETIC_14_shuffle2_SHUFFLE_s; R; _
  S -> SYNTHETIC_14_shuffle2_SHUFFLE_S; R; _
  k -> SYNTHETIC_14_shuffle2_SHUFFLE_k; R; _
  K -> SYNTHETIC_14_shuffle2_SHUFFLE_K; R; _
  i -> SYNTHETIC_14_shuffle2_SHUFFLE_i; R; _
  I -> SYNTHETIC_14_shuffle2_SHUFFLE_I; R; _
  $ -> SYNTHETIC_14_shuffle2_SHUFFLE_$; R; _
  [ -> SYNTHETIC_14_shuffle2_SHUFFLE_[; R; _
  * -> SYNTHETIC_14_shuffle2; R; _
  ! -> SYNTHETIC_14_shuffle2_SHUFFLE_!; R; _
  { -> SYNTHETIC_14_shuffle2_SHUFFLE_{; R; _
SYNTHETIC_14_shuffle2_SHUFFLE_`:
  _ -> START; L; `
  ` -> SYNTHETIC_14_shuffle2_SHUFFLE_`; R; `
  ^ -> SYNTHETIC_14_shuffle2_SHUFFLE_^; R; `
  s -> SYNTHETIC_14_shuffle2_SHUFFLE_s; R; `
  S -> SYNTHETIC_14_shuffle2_SHUFFLE_S; R; `
  k -> SYNTHETIC_14_shuffle2_SHUFFLE_k; R; `
  K -> SYNTHETIC_14_shuffle2_SHUFFLE_K; R; `
  i -> SYNTHETIC_14_shuffle2_SHUFFLE_i; R; `
  I -> SYNTHETIC_14_shuffle2_SHUFFLE_I; R; `
  $ -> SYNTHETIC_14_shuffle2_SHUFFLE_$; R; `
  [ -> SYNTHETIC_14_shuffle2_SHUFFLE_[; R; `
  * -> SYNTHETIC_14_shuffle2; R; `
  ! -> SYNTHETIC_14_shuffle2_SHUFFLE_!; R; `
  { -> SYNTHETIC_14_shuffle2_SHUFFLE_{; R; `
SYNTHETIC_14_shuffle2_SHUFFLE_^:
  _ -> START; L; ^
  ` -> SYNTHETIC_14_shuffle2_SHUFFLE_`; R; ^
  ^ -> SYNTHETIC_14_shuffle2_SHUFFLE_^; R; ^
  s -> SYNTHETIC_14_shuffle2_SHUFFLE_s; R; ^
  S -> SYNTHETIC_14_shuffle2_SHUFFLE_S; R; ^
  k -> SYNTHETIC_14_shuffle2_SHUFFLE_k; R; ^
  K -> SYNTHETIC_14_shuffle2_SHUFFLE_K; R; ^
  i -> SYNTHETIC_14_shuffle2_SHUFFLE_i; R; ^
  I -> SYNTHETIC_14_shuffle2_SHUFFLE_I; R; ^
  $ -> SYNTHETIC_14_shuffle2_SHUFFLE_$; R; ^
  [ -> SYNTHETIC_14_shuffle2_SHUFFLE_[; R; ^
  * -> SYNTHETIC_14_shuffle2; R; ^
  ! -> SYNTHETIC_14_shuffle2_SHUFFLE_!; R; ^
  { -> SYNTHETIC_14_shuffle2_SHUFFLE_{; R; ^
SYNTHETIC_14_shuffle2_SHUFFLE_s:
  _ -> START; L; s
  ` -> SYNTHETIC_14_shuffle2_SHUFFLE_`; R; s
  ^ -> SYNTHETIC_14_shuffle2_SHUFFLE_^; R; s
  s -> SYNTHETIC_14_shuffle2_SHUFFLE_s; R; s
  S -> SYNTHETIC_14_shuffle2_SHUFFLE_S; R; s
  k -> SYNTHETIC_14_shuffle2_SHUFFLE_k; R; s
  K -> SYNTHETIC_14_shuffle2_SHUFFLE_K; R; s
  i -> SYNTHETIC_14_shuffle2_SHUFFLE_i; R; s
  I -> SYNTHETIC_14_shuffle2_SHUFFLE_I; R; s
  $ -> SYNTHETIC_14_shuffle2_SHUFFLE_$; R; s
  [ -> SYNTHETIC_14_shuffle2_SHUFFLE_[; R; s
  * -> SYNTHETIC_14_shuffle2; R; s
  ! -> SYNTHETIC_14_shuffle2_SHUFFLE_!; R; s
  { -> SYNTHETIC_14_shuffle2_SHUFFLE_{; R; s
SYNTHETIC_14_shuffle2_SHUFFLE_S:
  _ -> START; L; S
  ` -> SYNTHETIC_14_shuffle2_SHUFFLE_`; R; S
  ^ -> SYNTHETIC_14_shuffle2_SHUFFLE_^; R; S
  s -> SYNTHETIC_14_shuffle2_SHUFFLE_s; R; S
  S -> SYNTHETIC_14_shuffle2_SHUFFLE_S; R; S
  k -> SYNTHETIC_14_shuffle2_SHUFFLE_k; R; S
  K -> SYNTHETIC_14_shuffle2_SHUFFLE_K; R; S
  i -> SYNTHETIC_14_shuffle2_SHUFFLE_i; R; S
  I -> SYNTHETIC_14_shuffle2_SHUFFLE_I; R; S
  $ -> SYNTHETIC_14_shuffle2_SHUFFLE_$; R; S
  [ -> SYNTHETIC_14_shuffle2_SHUFFLE_[; R; S
  * -> SYNTHETIC_14_shuffle2; R; S
  ! -> SYNTHETIC_14_shuffle2_SHUFFLE_!; R; S
  { -> SYNTHETIC_14_shuffle2_SHUFFLE_{; R; S
SYNTHETIC_14_shuffle2_SHUFFLE_k:
  _ -> START; L; k
  ` -> SYNTHETIC_14_shuffle2_SHUFFLE_`; R; k
  ^ -> SYNTHETIC_14_shuffle2_SHUFFLE_^; R; k
  s -> SYNTHETIC_14_shuffle2_SHUFFLE_s; R; k
  S -> SYNTHETIC_14_shuffle2_SHUFFLE_S; R; k
  k -> SYNTHETIC_14_shuffle2_SHUFFLE_k; R; k
  K -> SYNTHETIC_14_shuffle2_SHUFFLE_K; R; k
  i -> SYNTHETIC_14_shuffle2_SHUFFLE_i; R; k
  I -> SYNTHETIC_14_shuffle2_SHUFFLE_I; R; k
  $ -> SYNTHETIC_14_shuffle2_SHUFFLE_$; R; k
  [ -> SYNTHETIC_14_shuffle2_SHUFFLE_[; R; k
  * -> SYNTHETIC_14_shuffle2; R; k
  ! -> SYNTHETIC_14_shuffle2_SHUFFLE_!; R; k
  { -> SYNTHETIC_14_shuffle2_SHUFFLE_{; R; k
SYNTHETIC_14_shuffle2_SHUFFLE_K:
  _ -> START; L; K
  ` -> SYNTHETIC_14_shuffle2_SHUFFLE_`; R; K
  ^ -> SYNTHETIC_14_shuffle2_SHUFFLE_^; R; K
  s -> SYNTHETIC_14_shuffle2_SHUFFLE_s; R; K
  S -> SYNTHETIC_14_shuffle2_SHUFFLE_S; R; K
  k -> SYNTHETIC_14_shuffle2_SHUFFLE_k; R; K
  K -> SYNTHETIC_14_shuffle2_SHUFFLE_K; R; K
  i -> SYNTHETIC_14_shuffle2_SHUFFLE_i; R; K
  I -> SYNTHETIC_14_shuffle2_SHUFFLE_I; R; K
  $ -> SYNTHETIC_14_shuffle2_SHUFFLE_$; R; K
  [ -> SYNTHETIC_14_shuffle2_SHUFFLE_[; R; K
  * -> SYNTHETIC_14_shuffle2; R; K
  ! -> SYNTHETIC_14_shuffle2_SHUFFLE_!; R; K
  { -> SYNTHETIC_14_shuffle2_SHUFFLE_{; R; K
SYNTHETIC_14_shuffle2_SHUFFLE_i:
  _ -> START; L; i
  ` -> SYNTHETIC_14_shuffle2_SHUFFLE_`; R; i
  ^ -> SYNTHETIC_14_shuffle2_SHUFFLE_^; R; i
  s -> SYNTHETIC_14_shuffle2_SHUFFLE_s; R; i
  S -> SYNTHETIC_14_shuffle2_SHUFFLE_S; R; i
  k -> SYNTHETIC_14_shuffle2_SHUFFLE_k; R; i
  K -> SYNTHETIC_14_shuffle2_SHUFFLE_K; R; i
  i -> SYNTHETIC_14_shuffle2_SHUFFLE_i; R; i
  I -> SYNTHETIC_14_shuffle2_SHUFFLE_I; R; i
  $ -> SYNTHETIC_14_shuffle2_SHUFFLE_$; R; i
  [ -> SYNTHETIC_14_shuffle2_SHUFFLE_[; R; i
  * -> SYNTHETIC_14_shuffle2; R; i
  ! -> SYNTHETIC_14_shuffle2_SHUFFLE_!; R; i
  { -> SYNTHETIC_14_shuffle2_SHUFFLE_{; R; i
SYNTHETIC_14_shuffle2_SHUFFLE_I:
  _ -> START; L; I
  ` -> SYNTHETIC_14_shuffle2_SHUFFLE_`; R; I
  ^ -> SYNTHETIC_14_shuffle2_SHUFFLE_^; R; I
  s -> SYNTHETIC_14_shuffle2_SHUFFLE_s; R; I
  S -> SYNTHETIC_14_shuffle2_SHUFFLE_S; R; I
  k -> SYNTHETIC_14_shuffle2_SHUFFLE_k; R; I
  K -> SYNTHETIC_14_shuffle2_SHUFFLE_K; R; I
  i -> SYNTHETIC_14_shuffle2_SHUFFLE_i; R; I
  I -> SYNTHETIC_14_shuffle2_SHUFFLE_I; R; I
  $ -> SYNTHETIC_14_shuffle2_SHUFFLE_$; R; I
  [ -> SYNTHETIC_14_shuffle2_SHUFFLE_[; R; I
  * -> SYNTHETIC_14_shuffle2; R; I
  ! -> SYNTHETIC_14_shuffle2_SHUFFLE_!; R; I
  { -> SYNTHETIC_14_shuffle2_SHUFFLE_{; R; I
SYNTHETIC_14_shuffle2_SHUFFLE_$:
  _ -> START; L; $
  ` -> SYNTHETIC_14_shuffle2_SHUFFLE_`; R; $
  ^ -> SYNTHETIC_14_shuffle2_SHUFFLE_^; R; $
  s -> SYNTHETIC_14_shuffle2_SHUFFLE_s; R; $
  S -> SYNTHETIC_14_shuffle2_SHUFFLE_S; R; $
  k -> SYNTHETIC_14_shuffle2_SHUFFLE_k; R; $
  K -> SYNTHETIC_14_shuffle2_SHUFFLE_K; R; $
  i -> SYNTHETIC_14_shuffle2_SHUFFLE_i; R; $
  I -> SYNTHETIC_14_shuffle2_SHUFFLE_I; R; $
  $ -> SYNTHETIC_14_shuffle2_SHUFFLE_$; R; $
  [ -> SYNTHETIC_14_shuffle2_SHUFFLE_[; R; $
  * -> SYNTHETIC_14_shuffle2; R; $
  ! -> SYNTHETIC_14_shuffle2_SHUFFLE_!; R; $
  { -> SYNTHETIC_14_shuffle2_SHUFFLE_{; R; $
SYNTHETIC_14_shuffle2_SHUFFLE_[:
  _ -> START; L; [
  ` -> SYNTHETIC_14_shuffle2_SHUFFLE_`; R; [
  ^ -> SYNTHETIC_14_shuffle2_SHUFFLE_^; R; [
  s -> SYNTHETIC_14_shuffle2_SHUFFLE_s; R; [
  S -> SYNTHETIC_14_shuffle2_SHUFFLE_S; R; [
  k -> SYNTHETIC_14_shuffle2_SHUFFLE_k; R; [
  K -> SYNTHETIC_14_shuffle2_SHUFFLE_K; R; [
  i -> SYNTHETIC_14_shuffle2_SHUFFLE_i; R; [
  I -> SYNTHETIC_14_shuffle2_SHUFFLE_I; R; [
  $ -> SYNTHETIC_14_shuffle2_SHUFFLE_$; R; [
  [ -> SYNTHETIC_14_shuffle2_SHUFFLE_[; R; [
  * -> SYNTHETIC_14_shuffle2; R; [
  ! -> SYNTHETIC_14_shuffle2_SHUFFLE_!; R; [
  { -> SYNTHETIC_14_shuffle2_SHUFFLE_{; R; [
SYNTHETIC_14_shuffle2:
  _ -> START; L; *
  ` -> SYNTHETIC_14_shuffle2_SHUFFLE_`; R; *
  ^ -> SYNTHETIC_14_shuffle2_SHUFFLE_^; R; *
  s -> SYNTHETIC_14_shuffle2_SHUFFLE_s; R; *
  S -> SYNTHETIC_14_shuffle2_SHUFFLE_S; R; *
  k -> SYNTHETIC_14_shuffle2_SHUFFLE_k; R; *
  K -> SYNTHETIC_14_shuffle2_SHUFFLE_K; R; *
  i -> SYNTHETIC_14_shuffle2_SHUFFLE_i; R; *
  I -> SYNTHETIC_14_shuffle2_SHUFFLE_I; R; *
  $ -> SYNTHETIC_14_shuffle2_SHUFFLE_$; R; *
  [ -> SYNTHETIC_14_shuffle2_SHUFFLE_[; R; *
  * -> SYNTHETIC_14_shuffle2; R; *
  ! -> SYNTHETIC_14_shuffle2_SHUFFLE_!; R; *
  { -> SYNTHETIC_14_shuffle2_SHUFFLE_{; R; *
SYNTHETIC_14_shuffle2_SHUFFLE_!:
  _ -> START; L; !
  ` -> SYNTHETIC_14_shuffle2_SHUFFLE_`; R; !
  ^ -> SYNTHETIC_14_shuffle2_SHUFFLE_^; R; !
  s -> SYNTHETIC_14_shuffle2_SHUFFLE_s; R; !
  S -> SYNTHETIC_14_shuffle2_SHUFFLE_S; R; !
  k -> SYNTHETIC_14_shuffle2_SHUFFLE_k; R; !
  K -> SYNTHETIC_14_shuffle2_SHUFFLE_K; R; !
  i -> SYNTHETIC_14_shuffle2_SHUFFLE_i; R; !
  I -> SYNTHETIC_14_shuffle2_SHUFFLE_I; R; !
  $ -> SYNTHETIC_14_shuffle2_SHUFFLE_$; R; !
  [ -> SYNTHETIC_14_shuffle2_SHUFFLE_[; R; !
  * -> SYNTHETIC_14_shuffle2; R; !
  ! -> SYNTHETIC_14_shuffle2_SHUFFLE_!; R; !
  { -> SYNTHETIC_14_shuffle2_SHUFFLE_{; R; !
SYNTHETIC_14_shuffle2_SHUFFLE_{:
  _ -> START; L; {
  ` -> SYNTHETIC_14_shuffle2_SHUFFLE_`; R; {
  ^ -> SYNTHETIC_14_shuffle2_SHUFFLE_^; R; {
  s -> SYNTHETIC_14_shuffle2_SHUFFLE_s; R; {
  S -> SYNTHETIC_14_shuffle2_SHUFFLE_S; R; {
  k -> SYNTHETIC_14_shuffle2_SHUFFLE_k; R; {
  K -> SYNTHETIC_14_shuffle2_SHUFFLE_K; R; {
  i -> SYNTHETIC_14_shuffle2_SHUFFLE_i; R; {
  I -> SYNTHETIC_14_shuffle2_SHUFFLE_I; R; {
  $ -> SYNTHETIC_14_shuffle2_SHUFFLE_$; R; {
  [ -> SYNTHETIC_14_shuffle2_SHUFFLE_[; R; {
  * -> SYNTHETIC_14_shuffle2; R; {
  ! -> SYNTHETIC_14_shuffle2_SHUFFLE_!; R; {
  { -> SYNTHETIC_14_shuffle2_SHUFFLE_{; R; {
SYNTHETIC_15_step:
  _ -> SYNTHETIC_14_shuffle2; L; _
  ` -> SYNTHETIC_14_shuffle2; L; `
  ^ -> SYNTHETIC_14_shuffle2; L; ^
  s -> SYNTHETIC_14_shuffle2; L; s
  S -> SYNTHETIC_14_shuffle2; L; S
  k -> SYNTHETIC_14_shuffle2; L; k
  K -> SYNTHETIC_14_shuffle2; L; K
  i -> SYNTHETIC_14_shuffle2; L; i
  I -> SYNTHETIC_14_shuffle2; L; I
  $ -> SYNTHETIC_14_shuffle2; L; $
  [ -> SYNTHETIC_14_shuffle2; L; [
  * -> SYNTHETIC_14_shuffle2; L; *
  ! -> SYNTHETIC_14_shuffle2; L; !
  { -> SYNTHETIC_14_shuffle2; L; {
SYNTHETIC_16_shuffle2_SHUFFLE__:
  _ -> START; L; _
  ` -> SYNTHETIC_16_shuffle2_SHUFFLE_`; R; _
  ^ -> SYNTHETIC_16_shuffle2_SHUFFLE_^; R; _
  s -> SYNTHETIC_16_shuffle2_SHUFFLE_s; R; _
  S -> SYNTHETIC_16_shuffle2_SHUFFLE_S; R; _
  k -> SYNTHETIC_16_shuffle2_SHUFFLE_k; R; _
  K -> SYNTHETIC_16_shuffle2_SHUFFLE_K; R; _
  i -> SYNTHETIC_16_shuffle2_SHUFFLE_i; R; _
  I -> SYNTHETIC_16_shuffle2_SHUFFLE_I; R; _
  $ -> SYNTHETIC_16_shuffle2_SHUFFLE_$; R; _
  [ -> SYNTHETIC_16_shuffle2_SHUFFLE_[; R; _
  * -> SYNTHETIC_16_shuffle2; R; _
  ! -> SYNTHETIC_16_shuffle2_SHUFFLE_!; R; _
  { -> SYNTHETIC_16_shuffle2_SHUFFLE_{; R; _
SYNTHETIC_16_shuffle2_SHUFFLE_`:
  _ -> START; L; `
  ` -> SYNTHETIC_16_shuffle2_SHUFFLE_`; R; `
  ^ -> SYNTHETIC_16_shuffle2_SHUFFLE_^; R; `
  s -> SYNTHETIC_16_shuffle2_SHUFFLE_s; R; `
  S -> SYNTHETIC_16_shuffle2_SHUFFLE_S; R; `
  k -> SYNTHETIC_16_shuffle2_SHUFFLE_k; R; `
  K -> SYNTHETIC_16_shuffle2_SHUFFLE_K; R; `
  i -> SYNTHETIC_16_shuffle2_SHUFFLE_i; R; `
  I -> SYNTHETIC_16_shuffle2_SHUFFLE_I; R; `
  $ -> SYNTHETIC_16_shuffle2_SHUFFLE_$; R; `
  [ -> SYNTHETIC_16_shuffle2_SHUFFLE_[; R; `
  * -> SYNTHETIC_16_shuffle2; R; `
  ! -> SYNTHETIC_16_shuffle2_SHUFFLE_!; R; `
  { -> SYNTHETIC_16_shuffle2_SHUFFLE_{; R; `
SYNTHETIC_16_shuffle2_SHUFFLE_^:
  _ -> START; L; ^
  ` -> SYNTHETIC_16_shuffle2_SHUFFLE_`; R; ^
  ^ -> SYNTHETIC_16_shuffle2_SHUFFLE_^; R; ^
  s -> SYNTHETIC_16_shuffle2_SHUFFLE_s; R; ^
  S -> SYNTHETIC_16_shuffle2_SHUFFLE_S; R; ^
  k -> SYNTHETIC_16_shuffle2_SHUFFLE_k; R; ^
  K -> SYNTHETIC_16_shuffle2_SHUFFLE_K; R; ^
  i -> SYNTHETIC_16_shuffle2_SHUFFLE_i; R; ^
  I -> SYNTHETIC_16_shuffle2_SHUFFLE_I; R; ^
  $ -> SYNTHETIC_16_shuffle2_SHUFFLE_$; R; ^
  [ -> SYNTHETIC_16_shuffle2_SHUFFLE_[; R; ^
  * -> SYNTHETIC_16_shuffle2; R; ^
  ! -> SYNTHETIC_16_shuffle2_SHUFFLE_!; R; ^
  { -> SYNTHETIC_16_shuffle2_SHUFFLE_{; R; ^
SYNTHETIC_16_shuffle2_SHUFFLE_s:
  _ -> START; L; s
  ` -> SYNTHETIC_16_shuffle2_SHUFFLE_`; R; s
  ^ -> SYNTHETIC_16_shuffle2_SHUFFLE_^; R; s
  s -> SYNTHETIC_16_shuffle2_SHUFFLE_s; R; s
  S -> SYNTHETIC_16_shuffle2_SHUFFLE_S; R; s
  k -> SYNTHETIC_16_shuffle2_SHUFFLE_k; R; s
  K -> SYNTHETIC_16_shuffle2_SHUFFLE_K; R; s
  i -> SYNTHETIC_16_shuffle2_SHUFFLE_i; R; s
  I -> SYNTHETIC_16_shuffle2_SHUFFLE_I; R; s
  $ -> SYNTHETIC_16_shuffle2_SHUFFLE_$; R; s
  [ -> SYNTHETIC_16_shuffle2_SHUFFLE_[; R; s
  * -> SYNTHETIC_16_shuffle2; R; s
  ! -> SYNTHETIC_16_shuffle2_SHUFFLE_!; R; s
  { -> SYNTHETIC_16_shuffle2_SHUFFLE_{; R; s
SYNTHETIC_16_shuffle2_SHUFFLE_S:
  _ -> START; L; S
  ` -> SYNTHETIC_16_shuffle2_SHUFFLE_`; R; S
  ^ -> SYNTHETIC_16_shuffle2_SHUFFLE_^; R; S
  s -> SYNTHETIC_16_shuffle2_SHUFFLE_s; R; S
  S -> SYNTHETIC_16_shuffle2_SHUFFLE_S; R; S
  k -> SYNTHETIC_16_shuffle2_SHUFFLE_k; R; S
  K -> SYNTHETIC_16_shuffle2_SHUFFLE_K; R; S
  i -> SYNTHETIC_16_shuffle2_SHUFFLE_i; R; S
  I -> SYNTHETIC_16_shuffle2_SHUFFLE_I; R; S
  $ -> SYNTHETIC_16_shuffle2_SHUFFLE_$; R; S
  [ -> SYNTHETIC_16_shuffle2_SHUFFLE_[; R; S
  * -> SYNTHETIC_16_shuffle2; R; S
  ! -> SYNTHETIC_16_shuffle2_SHUFFLE_!; R; S
  { -> SYNTHETIC_16_shuffle2_SHUFFLE_{; R; S
SYNTHETIC_16_shuffle2_SHUFFLE_k:
  _ -> START; L; k
  ` -> SYNTHETIC_16_shuffle2_SHUFFLE_`; R; k
  ^ -> SYNTHETIC_16_shuffle2_SHUFFLE_^; R; k
  s -> SYNTHETIC_16_shuffle2_SHUFFLE_s; R; k
  S -> SYNTHETIC_16_shuffle2_SHUFFLE_S; R; k
  k -> SYNTHETIC_16_shuffle2_SHUFFLE_k; R; k
  K -> SYNTHETIC_16_shuffle2_SHUFFLE_K; R; k
  i -> SYNTHETIC_16_shuffle2_SHUFFLE_i; R; k
  I -> SYNTHETIC_16_shuffle2_SHUFFLE_I; R; k
  $ -> SYNTHETIC_16_shuffle2_SHUFFLE_$; R; k
  [ -> SYNTHETIC_16_shuffle2_SHUFFLE_[; R; k
  * -> SYNTHETIC_16_shuffle2; R; k
  ! -> SYNTHETIC_16_shuffle2_SHUFFLE_!; R; k
  { -> SYNTHETIC_16_shuffle2_SHUFFLE_{; R; k
SYNTHETIC_16_shuffle2_SHUFFLE_K:
  _ -> START; L; K
  ` -> SYNTHETIC_16_shuffle2_SHUFFLE_`; R; K
  ^ -> SYNTHETIC_16_shuffle2_SHUFFLE_^; R; K
  s -> SYNTHETIC_16_shuffle2_SHUFFLE_s; R; K
  S -> SYNTHETIC_16_shuffle2_SHUFFLE_S; R; K
  k -> SYNTHETIC_16_shuffle2_SHUFFLE_k; R; K
  K -> SYNTHETIC_16_shuffle2_SHUFFLE_K; R; K
  i -> SYNTHETIC_16_shuffle2_SHUFFLE_i; R; K
  I -> SYNTHETIC_16_shuffle2_SHUFFLE_I; R; K
  $ -> SYNTHETIC_16_shuffle2_SHUFFLE_$; R; K
  [ -> SYNTHETIC_16_shuffle2_SHUFFLE_[; R; K
  * -> SYNTHETIC_16_shuffle2; R; K
  ! -> SYNTHETIC_16_shuffle2_SHUFFLE_!; R; K
  { -> SYNTHETIC_16_shuffle2_SHUFFLE_{; R; K
SYNTHETIC_16_shuffle2_SHUFFLE_i:
  _ -> START; L; i
  ` -> SYNTHETIC_16_shuffle2_SHUFFLE_`; R; i
  ^ -> SYNTHETIC_16_shuffle2_SHUFFLE_^; R; i
  s -> SYNTHETIC_16_shuffle2_SHUFFLE_s; R; i
  S -> SYNTHETIC_16_shuffle2_SHUFFLE_S; R; i
  k -> SYNTHETIC_16_shuffle2_SHUFFLE_k; R; i
  K -> SYNTHETIC_16_shuffle2_SHUFFLE_K; R; i
  i -> SYNTHETIC_16_shuffle2_SHUFFLE_i; R; i
  I -> SYNTHETIC_16_shuffle2_SHUFFLE_I; R; i
  $ -> SYNTHETIC_16_shuffle2_SHUFFLE_$; R; i
  [ -> SYNTHETIC_16_shuffle2_SHUFFLE_[; R; i
  * -> SYNTHETIC_16_shuffle2; R; i
  ! -> SYNTHETIC_16_shuffle2_SHUFFLE_!; R; i
  { -> SYNTHETIC_16_shuffle2_SHUFFLE_{; R; i
SYNTHETIC_16_shuffle2_SHUFFLE_I:
  _ -> START; L; I
  ` -> SYNTHETIC_16_shuffle2_SHUFFLE_`; R; I
  ^ -> SYNTHETIC_16_shuffle2_SHUFFLE_^; R; I
  s -> SYNTHETIC_16_shuffle2_SHUFFLE_s; R; I
  S -> SYNTHETIC_16_shuffle2_SHUFFLE_S; R; I
  k -> SYNTHETIC_16_shuffle2_SHUFFLE_k; R; I
  K -> SYNTHETIC_16_shuffle2_SHUFFLE_K; R; I
  i -> SYNTHETIC_16_shuffle2_SHUFFLE_i; R; I
  I -> SYNTHETIC_16_shuffle2_SHUFFLE_I; R; I
  $ -> SYNTHETIC_16_shuffle2_SHUFFLE_$; R; I
  [ -> SYNTHETIC_16_shuffle2_SHUFFLE_[; R; I
  * -> SYNTHETIC_16_shuffle2; R; I
  ! -> SYNTHETIC_16_shuffle2_SHUFFLE_!; R; I
  { -> SYNTHETIC_16_shuffle2_SHUFFLE_{; R; I
SYNTHETIC_16_shuffle2_SHUFFLE_$:
  _ -> START; L; $
  ` -> SYNTHETIC_16_shuffle2_SHUFFLE_`; R; $
  ^ -> SYNTHETIC_16_shuffle2_SHUFFLE_^; R; $
  s -> SYNTHETIC_16_shuffle2_SHUFFLE_s; R; $
  S -> SYNTHETIC_16_shuffle2_SHUFFLE_S; R; $
  k -> SYNTHETIC_16_shuffle2_SHUFFLE_k; R; $
  K -> SYNTHETIC_16_shuffle2_SHUFFLE_K; R; $
  i -> SYNTHETIC_16_shuffle2_SHUFFLE_i; R; $
  I -> SYNTHETIC_16_shuffle2_SHUFFLE_I; R; $
  $ -> SYNTHETIC_16_shuffle2_SHUFFLE_$; R; $
  [ -> SYNTHETIC_16_shuffle2_SHUFFLE_[; R; $
  * -> SYNTHETIC_16_shuffle2; R; $
  ! -> SYNTHETIC_16_shuffle2_SHUFFLE_!; R; $
  { -> SYNTHETIC_16_shuffle2_SHUFFLE_{; R; $
SYNTHETIC_16_shuffle2_SHUFFLE_[:
  _ -> START; L; [
  ` -> SYNTHETIC_16_shuffle2_SHUFFLE_`; R; [
  ^ -> SYNTHETIC_16_shuffle2_SHUFFLE_^; R; [
  s -> SYNTHETIC_16_shuffle2_SHUFFLE_s; R; [
  S -> SYNTHETIC_16_shuffle2_SHUFFLE_S; R; [
  k -> SYNTHETIC_16_shuffle2_SHUFFLE_k; R; [
  K -> SYNTHETIC_16_shuffle2_SHUFFLE_K; R; [
  i -> SYNTHETIC_16_shuffle2_SHUFFLE_i; R; [
  I -> SYNTHETIC_16_shuffle2_SHUFFLE_I; R; [
  $ -> SYNTHETIC_16_shuffle2_SHUFFLE_$; R; [
  [ -> SYNTHETIC_16_shuffle2_SHUFFLE_[; R; [
  * -> SYNTHETIC_16_shuffle2; R; [
  ! -> SYNTHETIC_16_shuffle2_SHUFFLE_!; R; [
  { -> SYNTHETIC_16_shuffle2_SHUFFLE_{; R; [
SYNTHETIC_16_shuffle2:
  _ -> START; L; *
  ` -> SYNTHETIC_16_shuffle2_SHUFFLE_`; R; *
  ^ -> SYNTHETIC_16_shuffle2_SHUFFLE_^; R; *
  s -> SYNTHETIC_16_shuffle2_SHUFFLE_s; R; *
  S -> SYNTHETIC_16_shuffle2_SHUFFLE_S; R; *
  k -> SYNTHETIC_16_shuffle2_SHUFFLE_k; R; *
  K -> SYNTHETIC_16_shuffle2_SHUFFLE_K; R; *
  i -> SYNTHETIC_16_shuffle2_SHUFFLE_i; R; *
  I -> SYNTHETIC_16_shuffle2_SHUFFLE_I; R; *
  $ -> SYNTHETIC_16_shuffle2_SHUFFLE_$; R; *
  [ -> SYNTHETIC_16_shuffle2_SHUFFLE_[; R; *
  * -> SYNTHETIC_16_shuffle2; R; *
  ! -> SYNTHETIC_16_shuffle2_SHUFFLE_!; R; *
  { -> SYNTHETIC_16_shuffle2_SHUFFLE_{; R; *
SYNTHETIC_16_shuffle2_SHUFFLE_!:
  _ -> START; L; !
  ` -> SYNTHETIC_16_shuffle2_SHUFFLE_`; R; !
  ^ -> SYNTHETIC_16_shuffle2_SHUFFLE_^; R; !
  s -> SYNTHETIC_16_shuffle2_SHUFFLE_s; R; !
  S -> SYNTHETIC_16_shuffle2_SHUFFLE_S; R; !
  k -> SYNTHETIC_16_shuffle2_SHUFFLE_k; R; !
  K -> SYNTHETIC_16_shuffle2_SHUFFLE_K; R; !
  i -> SYNTHETIC_16_shuffle2_SHUFFLE_i; R; !
  I -> SYNTHETIC_16_shuffle2_SHUFFLE_I; R; !
  $ -> SYNTHETIC_16_shuffle2_SHUFFLE_$; R; !
  [ -> SYNTHETIC_16_shuffle2_SHUFFLE_[; R; !
  * -> SYNTHETIC_16_shuffle2; R; !
  ! -> SYNTHETIC_16_shuffle2_SHUFFLE_!; R; !
  { -> SYNTHETIC_16_shuffle2_SHUFFLE_{; R; !
SYNTHETIC_16_shuffle2_SHUFFLE_{:
  _ -> START; L; {
  ` -> SYNTHETIC_16_shuffle2_SHUFFLE_`; R; {
  ^ -> SYNTHETIC_16_shuffle2_SHUFFLE_^; R; {
  s -> SYNTHETIC_16_shuffle2_SHUFFLE_s; R; {
  S -> SYNTHETIC_16_shuffle2_SHUFFLE_S; R; {
  k -> SYNTHETIC_16_shuffle2_SHUFFLE_k; R; {
  K -> SYNTHETIC_16_shuffle2_SHUFFLE_K; R; {
  i -> SYNTHETIC_16_shuffle2_SHUFFLE_i; R; {
  I -> SYNTHETIC_16_shuffle2_SHUFFLE_I; R; {
  $ -> SYNTHETIC_16_shuffle2_SHUFFLE_$; R; {
  [ -> SYNTHETIC_16_shuffle2_SHUFFLE_[; R; {
  * -> SYNTHETIC_16_shuffle2; R; {
  ! -> SYNTHETIC_16_shuffle2_SHUFFLE_!; R; {
  { -> SYNTHETIC_16_shuffle2_SHUFFLE_{; R; {
SYNTHETIC_17_step:
  _ -> SYNTHETIC_16_shuffle2; L; _
  ` -> SYNTHETIC_16_shuffle2; L; `
  ^ -> SYNTHETIC_16_shuffle2; L; ^
  s -> SYNTHETIC_16_shuffle2; L; s
  S -> SYNTHETIC_16_shuffle2; L; S
  k -> SYNTHETIC_16_shuffle2; L; k
  K -> SYNTHETIC_16_shuffle2; L; K
  i -> SYNTHETIC_16_shuffle2; L; i
  I -> SYNTHETIC_16_shuffle2; L; I
  $ -> SYNTHETIC_16_shuffle2; L; $
  [ -> SYNTHETIC_16_shuffle2; L; [
  * -> SYNTHETIC_16_shuffle2; L; *
  ! -> SYNTHETIC_16_shuffle2; L; !
  { -> SYNTHETIC_16_shuffle2; L; {
normalise_matched_expression:
  _ -> normalise_matched_expression; R; _
  ` -> normalise_matched_expression; R; `
  ^ -> normalise_matched_expression; R; `
  s -> normalise_matched_expression; R; s
  S -> normalise_matched_expression; R; s
  k -> normalise_matched_expression; R; k
  K -> normalise_matched_expression; R; k
  i -> normalise_matched_expression; R; i
  I -> normalise_matched_expression; R; i
  $ -> normalise_matched_expression; R; $
  [ -> normalise_matched_expression; R; [
  * -> START; L; *
  ! -> normalise_matched_expression; R; !
  { -> normalise_matched_expression; R; {
